<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Effectiveさお</title>
    <link>https://h-sao.com/post/</link>
    <description>Recent content in Posts on Effectiveさお</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Wed, 07 Dec 2022 20:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://h-sao.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[C&#43;&#43;] VC&#43;&#43;でHackerRankの環境構築</title>
      <link>https://h-sao.com/blog/2022/12/07/how-to-develop-hackerrank-for-vscode/</link>
      <pubDate>Wed, 07 Dec 2022 20:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2022/12/07/how-to-develop-hackerrank-for-vscode/</guid>
      <description>この記事は C++ Advent Calendar 2022 7日目の記事です。
 （内容まとめ）
競プロ勢にとったら当たり前のローカル環境設定についての記事です
自分の言葉でまとめなおしたメモになります
みんな！AtCoder もいいけど HackerRank も面白いよ！
今年の3月ごろ、同僚（海外の方）から
「HackerRank 結構いいよ、わたしは週末によくやってるよ～」
と教えてもらいまして
たまにポチポチ解いています
 HackerRank
https://www.hackerrank.com/  ざっくり言うと、お題に対するコードを書いて、要求通りの出力が出来れば Pass! でポイントが溜まっていってバッチがもらえたりします
わたしは主にC++の Problem Solving を解いています
（数学系の問題も多いです）
 C++ language のジャンルで解くことも出来ますが、こっちは文法問題なので、あまり面白くない
 HackerRankは他のオンラインコーディングプラットフォームとはちょっと異なっていて
競技で問題を解いてランクを上げるというよりは、スキルの習得に焦点を当てているような気がします
解いて欲しい問題用の関数がミニマムに提供されてて、最初に記載するであろう入力系の処理が予め記載されているので、解くのに集中出来ますね
で、それまで真面目に Easy 問題を解いていたのですが、簡単すぎるし量も多い…つまらん…
となって、教えてくれた同僚に
「HackerRank、何の問題を解いてる？」
と聞いたところ、
「えぇー Easy やってるの？時間の無駄だよ～わたしは Hard しかやらないよ」
と突っ込まれました＞＜。
さてそこで、Hard 問題をやり始めましたが、あら。。。難しい。。。
こんなけ難しかったらデバッグしたくなるんだけど、HackerRankのサイトに組み込まれたコードエディタ上から問題を解くので、プリントデバッグしか方法がない
変数の中身や配列の中身をもっとアグレッシブに確認したい…
前置きが長くなりましたが、HackerRankをやるときに、Visual Studio上でコードを書いて確認する方法を記載しましたｍｍ
＜今回の環境＞
 Windows10 Visual Sutdio 2019 Hacker Rank の C++ 問題を対象  VSにコードコピペしてHackerRankの問題を解きたい コピペ出来ないとしんどいです！</description>
    </item>
    
    <item>
      <title>[Git] コミット済みのファイルを Git LFS 管理対象にしたいとき</title>
      <link>https://h-sao.com/blog/2022/08/03/add-gitlfs-file/</link>
      <pubDate>Wed, 03 Aug 2022 16:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2022/08/03/add-gitlfs-file/</guid>
      <description>バイナリファイルコミットしちゃたけど、これ Git LFS 管理対象にしたかったよねー。。。
というときの作業メモです
わたしの環境は Windows での動作確認になります
1) git lfs install で Git LFS をインストールします
わたしの環境にはすでに入っていたみたい…
&amp;gt;git lfs install Updated Git hooks. Git LFS initialized.  2) git lfs version でバージョンを確認しておく
&amp;gt;git lfs version git-lfs/3.2.0 (GitHub; windows amd64; go 1.18.2)  3) git lfs track とすると、.gitattributes に格納されている対象データの情報が見れます
例えばこんな感じ
&amp;gt;git lfs track Listing tracked patterns *.dll (.gitattributes) *.exe (.gitattributes)  4) git lfs track でLFS管理に入れたいファイルを指定します
&amp;gt;git lfs track &amp;quot;*.o&amp;quot; Tracking &amp;quot;*.</description>
    </item>
    
    <item>
      <title>[Unity] Windows/macOS内にあるUnityの場所</title>
      <link>https://h-sao.com/blog/2022/08/02/here-is-unityeditor/</link>
      <pubDate>Tue, 02 Aug 2022 17:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2022/08/02/here-is-unityeditor/</guid>
      <description>バッチモードとかでUnityを起動させたいとき
Windowsだと
C:¥Program Files¥Unity¥Hub¥Editor¥(バージョン名)¥Editor¥Unity.exe
とまぁ想像のつく位置にいてるんですけど
macOSのとき、あれ？どこにあるんだっけな？になったので、そのメモです
mac の場合はここに居てました
/Applications/Unity/Hub/Editor/(バージョン名)/Unity.app/Contents/MacOS/Unity
(バージョン名) は例えば 2021.3.2f1 とかになります</description>
    </item>
    
    <item>
      <title>[Windows] 壁紙のレジストリ設定場所</title>
      <link>https://h-sao.com/blog/2022/07/19/registory-wallpaperssettings-onwindows/</link>
      <pubDate>Tue, 19 Jul 2022 01:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2022/07/19/registory-wallpaperssettings-onwindows/</guid>
      <description> PCの壁紙にしてる画像データ…どこにあるんだっけ？
デスクトップでは見えてるんだけど…
そんな時は一度、レジストリの中を見てみたら解決するかもしれません
Windows11の環境で見てみました
壁紙のレジストリ設定  regedit でアプリを検索すると Registry Editor が出てきます
 HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Wallpapers
の中に、壁紙として登録されている画像情報のパスが入っています
  おお。。。ここにありましたか。。。！
しかし、
元のファイルを消しちゃったけど、デスクトップの壁紙だけは残ってるってときは
どこにあるんでしょうかね…
どなたか知ってる方いらっしゃれば教えてくださいｍｍ
（参考）
 Windows 10 最近使用したデスクトップの背景画像をWindowsの設定から削除して更新する
https://www.billionwallet.com/windows10/backimage-remove.html  </description>
    </item>
    
    <item>
      <title>[Git] macでgitを初めて使う時</title>
      <link>https://h-sao.com/blog/2022/05/22/using-git-command-line-on-mac/</link>
      <pubDate>Sun, 22 May 2022 16:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2022/05/22/using-git-command-line-on-mac/</guid>
      <description>mac で初めてコマンドから git を使う時の設定メモです
 わたしの環境  MacBook Pro 16-inch, 2019 macOS Monterey   git コマンドが使えなかった Gitをコマンドラインで打つと、こんなエラーが出ました。。。
1  % git     xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun
 開発者ツールが入ってないらしい
Xcode をインストールする xcode-select --install でインストールします
1 2 3  % xcode-select --install code-select: note: install requested for command line developer tools %    こんな感じでインストールが進みます
実際のダウンロードは、わたしの環境では20分くらい、インストールは10分くらいでした
そしてインストール完了のウィンドウが出てほっ…
Gitコマンドが使えるように git と打ってみる</description>
    </item>
    
    <item>
      <title>[Hugo] GitHub Actionsでサイトを自動デプロイしたときにCNAMEを残す方法</title>
      <link>https://h-sao.com/blog/2022/03/24/how-to-support-hugo-auto-deploy-to-cname-when-using-github-actions/</link>
      <pubDate>Thu, 24 Mar 2022 15:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2022/03/24/how-to-support-hugo-auto-deploy-to-cname-when-using-github-actions/</guid>
      <description>Hugo に限らないのですが
gh-pages ブランチを利用して GitHub Pages を作った時
自動デプロイで、独自ドメインの設定を記載した CNAME が消えちゃうことがあります
そのトラブルシュートについてです
Hugo 自体の設定もあるのですが、それよりも
元のコンテンツに CNAME ファイルを含めてしまうのがシンプルで簡単です
Hugo ならメインブランチの static ディレクトリ以下に CNAME を設置します
これだけでOK！</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;] 2次元Vectorのメモ</title>
      <link>https://h-sao.com/blog/2022/03/20/note-two-dimensional-vector/</link>
      <pubDate>Sun, 20 Mar 2022 02:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2022/03/20/note-two-dimensional-vector/</guid>
      <description>HackerRankやってるときによく２次元配列が出てくるので、ちゃちゃっとやりたいときのメモです
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  // ２次元配列の宣言,,,出来れば v じゃなくて用途名にしたいところ… std::vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; v(2, vector&amp;lt;int&amp;gt;(3)); // こんな配列が出来てる↓↓↓ v.at(0).at(0); v.at(0).at(1); v.at(0).at(2); v.at(1).at(0); v.at(1).at(1); v.at(1).at(2); // 呼び先でも内容を更新したいときは参照が楽… void func(vector&amp;lt;int&amp;gt; &amp;amp;t) void func(vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; &amp;amp;v) // べた書きループはかなり楽 for(unsigned int i = 0; i &amp;lt; v.size(); ++i){ for(unsigned int j = 0; j &amp;lt; v.</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;] Windowsの空のアプリケーションを作る手順メモ</title>
      <link>https://h-sao.com/blog/2022/03/08/how-to-create-blank-windows-app/</link>
      <pubDate>Tue, 08 Mar 2022 15:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2022/03/08/how-to-create-blank-windows-app/</guid>
      <description>いつもどうやったっけな？と思って同じ過ちを繰り返してるのでメモ
環境:
Visual Studio 2022
作りたいソリューション
 C++プロジェクト ブランクプロジェクト Windowsデスクトップアプリケーション（コンソールではない！）  いつもわたし、空のプロジェクトを作りたいからといって
Empty Project を選んでしまうのです…
すると、コンソールベースの exe を作るソリューションになってしまいます
ちゃうねん、これちゃうねん！
Windowアプリの空のソリューションを作りたい場合はこれ
 Create a new project Windows Desktop Wizard を選択 Configure your new project で名前を入れて次に進む Windows Desktop Project で Desktop Application (.exe) を選択 更に Empty project にチェックを入れる これで OK を押せば、よし！  これこれ、、、これやねん。。。</description>
    </item>
    
    <item>
      <title>[Git] フォーク元のリポジトリに追いつきたいときメモ</title>
      <link>https://h-sao.com/blog/2022/02/27/how-to-update-fork-repository-on-git/</link>
      <pubDate>Sun, 27 Feb 2022 01:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2022/02/27/how-to-update-fork-repository-on-git/</guid>
      <description>よくフォークしたリポジトリを最新化する方法を忘れては検索を繰り返してるので、いい加減自分のブログにメモしておきます
最初の fork 以降、フォーク元のリポジトリに追いつきたいときのお話です
1. 自分のローカルのリポジトリに登録されているリモート情報を見てみる 1  $ git remote -v   わたしの実行結果はこんな感じ、まだフォーク元との関連はなし
1 2 3  $ git remote -v origin	https://github.com/h-sao/xxx.git (fetch) origin	https://github.com/h-sao/xxx.git (push)   2. フォーク元のURLを upstream に登録します （フォーク元は zzz/xxx という名前で公開されている場合です）
1  $ git remote add upstream https://github.com/zzz/xxx.git   ちゃんと登録されてるかどうかは、さっきの git remote -v で確認します
1 2 3 4 5  $ git remote -v origin	https://github.com/h-sao/xxx.git (fetch) origin	https://github.com/h-sao/xxx.git (push) upstream	https://github.</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;] ラムダのパラメータリスト()が省略できるようになった</title>
      <link>https://h-sao.com/blog/2022/02/19/cpp23-lambda/</link>
      <pubDate>Sat, 19 Feb 2022 09:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2022/02/19/cpp23-lambda/</guid>
      <description>この記事は meetup app osaka@6 の参加記事です。
 C++23 でタイトルの通り、パラメータリストのカッコが省略できるようになりました
 Make () more optional for lambdas
http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p1102r2.html  gccなら12以上、Clangは14以上で動作するようです
1 2 3 4  [=] // () // mutable 書いてても省略可能に！ mutable {}    (もう少し追記するとおもいますが、今はこれで…)</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;] HackerRank始めました</title>
      <link>https://h-sao.com/blog/2022/01/30/start-hackerrank/</link>
      <pubDate>Sun, 30 Jan 2022 12:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2022/01/30/start-hackerrank/</guid>
      <description>友達に、HackerRankやってみるといいよと言われたので、始めてみました
 HackerRank
https://www.hackerrank.com/  自分のプロフィールはこれ。。。
まだC++の問題を２問解いただけだけど
https://www.hackerrank.com/haruka_sao
履歴のために、自分の解いたコードをGitHubにアップしたりして…
https://github.com/h-sao/HackerRank/
ランクによってバッチが付きます
ふーん。。HackerRank、こんな感じで解いていくとバッチが付くのか～実績解除していく感じやな pic.twitter.com/AM6d7s6rUU
&amp;mdash; 遥佐保 (@hr_sao) January 28, 2022 
バッチは Language Proficiency でポイントを稼ぐとスターが付いていく方式です
 10 ポイントで 1 Star（Bronze） &amp;hellip;
 250 ポイントで 5 Star（Gold）
  最初に触ってみたのは c++ Language Proficiency Badges だったのですが
どう考えても面白くないというか、C++もう業務で何年も使えてるので
言語のほうは余暇で楽しむとして、アルゴリズム問題のほうを頑張っていこかなと思います
Problem Solving Badges は
 1 Star - Bronze 30 2 Star - Bronze 100 3 Star - Silver 200 4 Star - Silver 475 5 Star - Gold 850 6 Star - Gold 2200  こんな感じ…</description>
    </item>
    
    <item>
      <title>[Diary] 2022年もよろしくお願いします</title>
      <link>https://h-sao.com/blog/2022/01/25/hello2022/</link>
      <pubDate>Tue, 25 Jan 2022 01:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2022/01/25/hello2022/</guid>
      <description>自分がブログを始めたのが 2008/1/20 だったみたいで、当時はライブドアブログに書いてました
それから毎年1月を迎えるときに、「今年もよろしくブログ」を書いていましたが。。。
2019年で途絶えてしまいました…（Ｔ△Ｔ）
2022年の今年は書いておこうかなと！重い腰をあげてみました、ヨイショ！
予定管理 2021年の私的ハイライトといえば、バレットジャーナル を書き始めたことですね！
これは自作の手帳にバンバン書き込んでいくスタイルで、わたしには合っていました
習慣化 子供も居てるので、なかなか思うように時間が取れなくなり、物事を習慣化するようにしました
小さな習慣 という本を読んで、うまく習慣化ができるようになったので
このブログも、自分のための勉強も、習慣でぽちぽちとやっています
習慣でものごとをやると、いつの間にかできてる！という感激がありますね
（半面、期日の決まった目標達成には、習慣は不向きというのが判りました
何事も経験してみるもんですね）
毎日、習慣化を意識的にやってるのは以下
 技術的な勉強 ギターの練習 ブログの下書き  すでに苦にならず毎日習慣化ＤＯＮＥのもの
 読書  意識して毎日必ずやるようにしたら、歯磨きのように無意識で読書は出来るようになりました
この調子で、他のものも完全な習慣にしたい。。。というのが今年の目標かな～
技術 あとは Visual Studio が 2022 になったのもあって、何か作りたいなーと思い、ゲーム屋さんらしくレンダリング（まずは DirectX12）の勉強を年末から開始しています
このブログにもなんかトピックが書けるようになったら良いかな～
あ！年末に C++ Advent Calendar 2021 に参加できたのは、かなり嬉しかったです
久しぶりにアドカレに参加できました！
2022年も、どうぞよろしくお願い致します！</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;] Advent Calendarへの参加履歴 2010-2021</title>
      <link>https://h-sao.com/blog/2021/12/26/summary-adventcalentar-from2010-to2021/</link>
      <pubDate>Sun, 26 Dec 2021 01:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2021/12/26/summary-adventcalentar-from2010-to2021/</guid>
      <description>自分メモです
過去に参加した C++ Advent Calendar の自分の記事のリンク
C++ Advent Calendar jp 2010  [C++]高速化について思うところ
https://h-sao.com/blog/2011/01/01/think-about-sppding-up-cpp/  Boost Advent Calendar 2011  [Boost/WinRT]Windows8のメトロスタイルアプリでBoost！
http://blog.livedoor.jp/haruka_sao/archives/51954974.html  C++ Advent Calendar jp 2012  [C++]VisualStudio2012とTaskとAMPの入門
http://blog.livedoor.jp/haruka_sao/archives/52015184.html  C++ Advent Calendar 2013  [C++]VisualStudio2013NovCTP：C++17(予定)resumable/await紹介
http://blog.livedoor.jp/haruka_sao/archives/52056922.html  C++ Advent Calendar 2021  [C++] Modulesのコンパイル（MSVC ver）とBMIについて
https://h-sao.com/blog/2021/12/01/about-cpp-modules/  意外と参加してました。。。
こうやって記録に残すのは、なんだか気分が良いですね</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;] Modulesのコンパイル（MSVC ver）とBMIについて</title>
      <link>https://h-sao.com/blog/2021/12/01/about-cpp-modules/</link>
      <pubDate>Wed, 01 Dec 2021 00:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2021/12/01/about-cpp-modules/</guid>
      <description>この記事は C++ Advent Calendar 2021 1日目（初日！）の記事です。
 少し前からC++に Modules がやってきました
C++20 対応のメジャーどころのコンパイラ（MSVC/gcc/Clang など）で使うことができます
個人的にはビックウェーブが来たーーーと思ってまして、つねづねポチポチと Modules について調べていました
それを少しまとめたいと思います
モジュールの説明 昔ながらのプリコンパイルヘッダの概念を、今風にした感じでしょうか
ヘッダファイルをインクルードしていたものを Modules に置き換えることが出来ます
ヘッダファイルだと、
インクルードの順番に気を付けたり
コンパイル時間が長くなったり
インクルードガード書いたりと
ゆーてローテク文字列だったのですが、
それがバイナリとして公式に提供されました
Modulesを記載するファイル 各コンパイラによって（推奨）拡張子が異なります
 MSVC (cl.exe)
 Foo.ixx
  Clang
 Foo.cppm  GCC
 Foo.cc Foo.cp Foo.cxx Foo.cpp Foo.c++ Foo.C   （参考）
 MSVC
Overview of modules in C++ GCC
GCC and File Extensions - Development with GNU/Linux https://blog.</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]Compiler Explorerの出力結果の表示方法</title>
      <link>https://h-sao.com/blog/2021/10/05/how-to-show-stdout-on-compiler-explorer/</link>
      <pubDate>Tue, 05 Oct 2021 00:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2021/10/05/how-to-show-stdout-on-compiler-explorer/</guid>
      <description>Compiler Explorer というオンラインコンパイルサービスがあります
 Compiler Explorer
https://godbolt.org/  書いたC++コードのアセンブリ出力結果をリナルタイムに表示してくれるサービスです
すごーーー👀
初めてこのサービスを見た時には感激しました〜
さておき、
わたし、これで実行結果を見る方法を知らなかったんですね…ハズカシー(*ﾉдﾉ)
「Output」を押すと出力結果ウィンドウは出てきますが
このリターン値だけじゃなくて、 std::cout の結果も欲しいんですけど…👀
ちょっと調べてみたらすぐに判明しました＞＜。
Outputの設定項目に Execute the code のチェックボックスがあるので、それを選択すれば表示されます
出力はこんな感じですね〜
便利です〜</description>
    </item>
    
    <item>
      <title>[macOS] BootCampの起動OSを選ぶ</title>
      <link>https://h-sao.com/blog/2021/06/17/select-to-start-os-on-bootcamp/</link>
      <pubDate>Thu, 17 Jun 2021 14:40:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2021/06/17/select-to-start-os-on-bootcamp/</guid>
      <description>macOS に BootCamp を入れると、デフォルト起動OSが Windows になります
（わたしの環境ではそうなりました）
これ、デフォルトを macOS に戻すには、
 システム環境設定
＞ 起動ディスク
 ここを macOS にすればOK
Windows を立ち上げたい時には、
電源を入れた直後に option を長押しすれば、起動OS選択画面になります</description>
    </item>
    
    <item>
      <title>[Windows] そのexeがx64かx86かを見分ける方法 Part2</title>
      <link>https://h-sao.com/blog/2020/11/07/how-to-check-x64-or-x86-windows-binary-part2/</link>
      <pubDate>Sat, 07 Nov 2020 10:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2020/11/07/how-to-check-x64-or-x86-windows-binary-part2/</guid>
      <description>先日、こんなブログを書きました
 [Windows] そのexeがx64かx86かを見分ける方法
http://h-sao.com/blog/2020/10/26/how-to-check-x64-or-x86-windows-binary/  このブログを公開したところ、Twitterで @ripjyr さんより
macなら file コマンドあるよと教えていただいたので追加記事を書いておきます～
上記のブログ記事では、 exe データが 32bit なのか 64bit なのかを調べるやりかたとして
３つのチェック方法を記載しました
今回は４つ目の方法の紹介です～！
パターン4. file コマンドで調べる（macOSの場合） これは mac のみの環境で、Win exe を調べたいって時のお話です
mac には file コマンドがあって、それを使うと簡単に Windows exe のビット（PEヘッダ）を調べることができます
$ file 調べたいファイル名   x86の場合  PE32 executable (GUI) Intel 80386, for MS Windows と表示されます！
1 2  $ file AGDRec.exe AGDRec.exe: PE32 executable (GUI) Intel 80386, for MS Windows    x64の場合  PE32+ executable (GUI) x86-64, for MS Windows とでます</description>
    </item>
    
    <item>
      <title>[Windows] そのexeがx64かx86かを見分ける方法</title>
      <link>https://h-sao.com/blog/2020/10/26/how-to-check-x64-or-x86-windows-binary/</link>
      <pubDate>Mon, 26 Oct 2020 12:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2020/10/26/how-to-check-x64-or-x86-windows-binary/</guid>
      <description>手元にあるexeが64bitなのか32bitなのかを知りたい…
開発してるとこういう時がたまにあると思う…
多分ちょっとニッチな需要だけど、検索したらちゃんと誰かが既に調べてくれていました！
パターン1. Windows のメモ帳（notepad.exe）を使って調べる 何にもない環境でも、OS が Windows なら必ず入っているメモ帳&amp;rdquo;φ(・ェ・o)~メモメモ
これで調べるのが一番簡単な調査方法だと思います~
 メモ帳：notepad.exe で調べたい exe ファイルを開く
 文字列 PE を検索する
こんな感じ↓↓↓
 PE の後ろに空白がちょっとだけあり、その後に続く文字で判別できます
   PE L  32bit版は L が続く  PE d  64bit版は d が続く   ふむふむなるほど！
パターン2. バイナリエディタを使って調べる 最近のバイナリエディターのおススメは hexdump for VSCode です
昔は TEXBIN を使ってましたが、VSCode 内で完結するのが良いですね~
 hexdump for VSCode
https://marketplace.visualstudio.com/items?itemName=slevesque.vscode-hexdump   VSCode を開く
 調べたい exe をドラッグ＆ドロップする
 こんなメッセージが出る…（だが気にしない）</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;] 実行環境の差異によるintワーニングが出ない書き方</title>
      <link>https://h-sao.com/blog/2020/10/02/fixed-a-diffrent-cpp-runtime-env-causing-a-int-warning/</link>
      <pubDate>Fri, 02 Oct 2020 05:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2020/10/02/fixed-a-diffrent-cpp-runtime-env-causing-a-int-warning/</guid>
      <description>C++のワーニングを放置していたのですが、そっと @srz_zumix さんが教えてくれてました
忘れないうちに&amp;rdquo;φ(・ェ・o)~メモメモ
x86環境とx64環境が混在してる場合にエラーが出やすい こんなやつとか出ます…
1 2 3 4 5 6  // Warning が出る例 std::vector&amp;lt;int&amp;gt; my_vec = { 0, 42 }; uint32_t max_loop_counter = my_vec.size(); // ←ここね uint32_t counter = 0; // 以下、counter を max_loop_counter までなんらかの処理    これは x86環境だと warning は出ないのですが x64 環境想定でコンパイルすると、ワーニングが出ます
 (Clangの例)
warning: Implicit conversion loses integer precision: &amp;lsquo;std::__1::vector&amp;gt;::size_type&amp;rsquo; (aka &amp;lsquo;unsigned long&amp;rsquo;) to &amp;lsquo;u_int32_t&amp;rsquo; (aka &amp;lsquo;unsigned int&amp;rsquo;) [-Wshorten-64-to-32]
 (￣□￣;
ええ、ええ、判っていますとも…
int 型が処理系によって異なるのは…</description>
    </item>
    
    <item>
      <title>[Github] Github Actionsでブログを更新するようにしました</title>
      <link>https://h-sao.com/blog/2020/09/28/using-githubactions-for-blog/</link>
      <pubDate>Mon, 28 Sep 2020 12:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2020/09/28/using-githubactions-for-blog/</guid>
      <description>元々、このブログは hugo で作った静的HTMLを wercker でオートデプロイして作っていました
だけど wercker は設定の変更が多くてすぐにデプロイ出来なくなっていたんですよね~で、辞めました
これを作った当時は wercker がイケイケドンドンだったので
CircleCI から乗り換える人も多かったのですが
今となってはカジュアルデプロイは CircleCI …いやいや Github Actions があるやないか！
ということで、 Github Actions でデプロイするようにしてみました
Github Actions の設定ON ここをポチっと押すと、Actionsの設定画面へ
Github Actions の設定ファイルを書いてみる 知識なしで初めてみましたが、すんなり簡単にビルド＆デプロイすることが出来ました
というのも、GitHub Actions for GitHub Pages というデプロイするためのオールインワンアクションを公開してくれている方がいらっしゃいました
設定ファイルをまんま真似するだけで使えます
 https://github.com/peaceiris/actions-gh-pages  そしてこの方、hugo 対応のアクションも公開して下さっています！
 https://github.com/peaceiris/actions-hugo  ここの例に書いてる yaml ファイルのまんまで良い感じにデプロイ出来ました
こんな感じ↓↓↓
 https://github.com/h-sao/h-sao.com/blob/master/.github/workflows/actions.yml  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  # This is a basic workflow to help you get started with Actions name: Deploy Github Pages to Hugo # Controls when the action will run.</description>
    </item>
    
    <item>
      <title>[c&#43;&#43;] 2次元配列的な書き方</title>
      <link>https://h-sao.com/blog/2020/05/08/cpp-2-dimensional-array/</link>
      <pubDate>Fri, 08 May 2020 15:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2020/05/08/cpp-2-dimensional-array/</guid>
      <description>自分メモ
2次元配列 C++11 以前では、2次元配列はこんな感じで書いていました
1 2 3 4 5 6  // 2-dimensional array (raw type) constexpr static float xy_raw[][2] = { { 0.f, 10.f} // 0  , { 20.f, 30.f} // 1  , { 40.f, 50.f} // 2 };    これでも悪くは無いのですが、生配列を扱うと範囲外アクセスに気が付かない可能性が出てきます そこで C++11 から境界チェックが出来る配列の std::array が登場しました
これを使えば、C-styleの配列のノリで扱うことが可能です
 std::array - cpprefjp
https://cpprefjp.github.io/reference/array/array.html  さらに2次元配列にしたければ std::array を std::vector に入れることで実現可能です
1 2 3 4 5 6  // 2-dimensional array (using stl) const std::vector&amp;lt;std::array&amp;lt;float, 2&amp;gt;&amp;gt; xy_array = { { 0.</description>
    </item>
    
    <item>
      <title>[WindowsTerminal] Preview版のインストール＆Git Bashを追加したい</title>
      <link>https://h-sao.com/blog/2020/03/19/how-to-install-windowsterminalpreview/</link>
      <pubDate>Thu, 19 Mar 2020 23:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2020/03/19/how-to-install-windowsterminalpreview/</guid>
      <description>Windows Terminal …どんなもんだろなと思って、使ってみました
もともとは、Gitのブランチ名をコマンドプロンプトに表示できたらいいのにー と思って調べたのでした
Windows Terminal に Git Bash (正確には Git for Windows ) が登録できるようなので、それをやってみました
Windows Terminal (Preview)のインストール 普通に 「Windows Terminal download」で検索すると、わたしの場合「マイクロソフトストア」のリンクがトップに来ましたけど
ストアとかよくわからんし…
よく見ると Windows Terminal は GitHub に公開されてます
 https://github.com/microsoft/terminal  ここから Preview版をGet★
 https://github.com/microsoft/terminal/releases  3/19時点では、Windows Terminal Preview v0.10.761.0 のバージョンでした
以下、やったこと
1) msixbundle を実行するとこんな画面↓↓↓ 2) インストールを押すと、わたしの環境ではエラーになりました エラーメッセージ内容：
 Microsoft.WindowsTerminal_0.10.761.0_x64__8wekyb3d8bbwe をインストールできません。このパッケージはデバイスと互換性がありません。このパッケージをインストールするには、OS バージョン 10.0.18362.0 またはそれ以降の Windows.Mobile デバイス ファミリが必要です。現在、デバイスでは OS バージョン 10.0.17763.1098 が実行されています。 (0x80073cfd)
 おぉ。。。めっちゃ判りやすいメッセージが！
3) よくわからんけど、Windows Updateしてみます 4) もう一度ダウンロードした msixbundle を実行 5) 正常にインストールできたみたい！ 6) 開くウィンドウのタイプを選べます よしよし</description>
    </item>
    
    <item>
      <title>[GitHub Pages] カスタムドメインのDNS情報を更新する</title>
      <link>https://h-sao.com/blog/2020/02/25/how-to-change-dnsinfo-for-github-custom-domain/</link>
      <pubDate>Tue, 25 Feb 2020 12:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2020/02/25/how-to-change-dnsinfo-for-github-custom-domain/</guid>
      <description>去年、2019年の4月くらいから
GitHub Pages にファイルをアップすると、ワーニングが出るようになった
内容はこんなやつ
1 2 3 4 5 6 7 8 9 10 11  Title: [h-sao/h-sao.com] Page build warning The page build completed successfully, but returned the following warning for the `gh-pages` branch: The custom domain for your GitHub Pages site is pointed at an outdated IP address. You must update your site&amp;#39;s DNS records if you&amp;#39;d like it to be available via your custom domain. For more information, see https://help.</description>
    </item>
    
    <item>
      <title>[Git] Gitの歴史を書き換える関連</title>
      <link>https://h-sao.com/blog/2020/01/29/tips-about-git-history-changed/</link>
      <pubDate>Wed, 29 Jan 2020 16:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2020/01/29/tips-about-git-history-changed/</guid>
      <description>よくやらかすので自分メモ
事前準備 # 今いるブランチの確認 $ git branch # ブランチに移動 $ git checkout feature/xxxxx  PR出す前、きれいな環境にしたいなどで整えておきたいこと
# 手動ブランチの取得/追従 $ git checkout feature/yyyyy $ git pull  ローカル作業全てを無かったことにする git fetch origin git reset --hard origin/master  pushしてしまった歴史を書き換える # 自分の名前のコミットを検索 $ git log --committer=&amp;quot;Sao Haruka&amp;quot; # ↑の gitlog より戻りたいハッシュ値を探す $ git reset [戻りたいコミットのハッシュ値] --hard # 強制push $ git push -f origin feature/xxxxx  既に feature/xxxxx で誰かが作業していたら強制プッシュはあきらめる
不要になったブランチを削除する 要らないブランチは削除しとく
$ git push --delete origin feature/xxxxx  PRに不要なコミットが混じる 原因：</description>
    </item>
    
    <item>
      <title>[Git] Commit&amp;PushしてしまったAuthor情報を変更したい</title>
      <link>https://h-sao.com/blog/2019/10/15/how-to-fix-git-author/</link>
      <pubDate>Tue, 15 Oct 2019 12:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2019/10/15/how-to-fix-git-author/</guid>
      <description>最近、GitKraken を使って更新をしています
Pro バージョンだとアカウント情報の切り替えが簡単に出来るので
会社用や個人用に切り替えて作業するのがとても便利です
しかしたまに切り替え忘れて、本来のアカウントじゃないやつでコミットしてしまって
意図しないメアドやユーザ名が入ったりして…(-&amp;ldquo;-;A &amp;hellip;アセアセ
そんなときの変更の方法です
Author 変更方法 直前のコミットを変更したい場合です
$ git commit --amend  を使うと、コミット履歴が書き換えられるんですけど
これで書き換えると、コミットの作者（Author）は変わらず、コミッター（Commiter）が変わるだけです
Authorを書き換えるには
$ git commit --amend --author=&amp;quot;Sao Haruka &amp;lt;sao@tmp.com&amp;gt;&amp;quot;  こうすると書き換わります
こんな感じね↓↓↓
1 2 3 4  $ git commit --amend --author=&amp;#34;Sao Haruka &amp;lt;sao@tmp.com&amp;gt;&amp;#34; [feature/xxxxx 9999999999] [WIP] Added hogehoge Date: Thu Oct 10 22:30:00 2019 +0900 1 files changed, 1 insertions(+), 1 deletions(-)   書き換わったー！
サーバーに push しちゃってるとき もし自分だけの作業ブランチでやってるのであれば、サーバーの履歴を強制的に書き換えることが出来ます
（共通ブランチでは、強制書き換えはやめよう）</description>
    </item>
    
    <item>
      <title>[Hugo] Hugoの環境をDocker上で動かす</title>
      <link>https://h-sao.com/blog/2019/07/28/how-to-use-hugo-on-docker/</link>
      <pubDate>Sun, 28 Jul 2019 18:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2019/07/28/how-to-use-hugo-on-docker/</guid>
      <description>今回の環境
 macOS Mojave Docker Desktop Hugo  このブログは Hugo というスタティックジェネレーターで作っています
Hugoは golang で動いているので、ローカルに Go の環境が必要なわけですが
以前、MacBookの中にダイレクトに Hugo をインストールしていたら、別で入っているGoのバージョンと、うまくかみ合わなくなったことがありました
解決に結構時間が取られちゃったので、もう macOSを使うときには、なんでもかんでも docker で分離しようと心に決めたのでした…
その方法です
やってみたら、超簡単でした
Hugo に対応した docker image をダウンロード 1 2 3 4 5 6 7 8 9 10  # Hugo で docker を検索 sao$ docker search hugo NAME DESCRIPTION STARS OFFICIAL AUTOMATED jojomi/hugo hugo, see https://gohugo.io 44 [OK] publysher/hugo Docker base image for static sites generated… 37 [OK] monachus/hugo Docker image for building and running Hugo (… 28 [OK] klakegg/hugo Minimal image and variants with batteries in… 22 [OK] cibuilds/hugo Docker image for Hugo, the static-site gener… 10 … …（いっぱいあった）   今回わたしは、klakegg/hugo のバージョンを使うことにしました</description>
    </item>
    
    <item>
      <title>[VisualStudio] Visual Studioで使う改行コードを指定する方法</title>
      <link>https://h-sao.com/blog/2019/07/26/how-to-keep-line-feed-code-by-visualstudio-2019/</link>
      <pubDate>Fri, 26 Jul 2019 17:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2019/07/26/how-to-keep-line-feed-code-by-visualstudio-2019/</guid>
      <description>環境
 Windows10 Visual Studio 2019 Unity 2018  元々これを調べたきっかけは、Unityで作ったプロジェクトファイルを開いたときに
改行コード に関する警告が必ず出ていたからです
 There are inconsistent line endings in the &amp;lsquo;Assets/Script/xxxxx.cs&amp;rsquo; script. Some are Mac OS X (UNIX) and some are Windows.
 Windowsで作業してたとしても、Unityのプロジェクトはで作られたソースコードは
改行コードが LF なんですよね
Visual Studio のデフォルトは CR+LF
それで改行コードが混じってますよ～とVSが警告出してくれてたんですね。。。
プロジェクト内では、Windows と macOS が入り乱れている状態なので
CR+LF に統一も出来ず
LFに統一するしかない…
そんなときは、.editorcongfig ファイルを作成するのがおススメです！
.editorcongfig ファイル [*] end_of_line = lf charset = utf-8-bom   end_of_line で改行コードを LF 指定にしています
あとUnityで日本語を扱うなら、Bom付きのUTF-8 が良いらしい（？）
 この.</description>
    </item>
    
    <item>
      <title>[Windows10] 範囲選択スクリーンショットを撮る機能の紹介</title>
      <link>https://h-sao.com/blog/2019/07/18/how-to-take-a-windows10-region-screenshot-by-built-in-tool/</link>
      <pubDate>Thu, 18 Jul 2019 12:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2019/07/18/how-to-take-a-windows10-region-screenshot-by-built-in-tool/</guid>
      <description>macには、範囲選択してスクリーンショットを撮る機能がずいぶん前からあるんですけど
Windowsはしばらくありませんでした…
でも（いつから出来るようになったのかよく知らないけど）
Windows10でも標準機能で、範囲選択スクリーンショットが出来るようになってたので
それを紹介しておきます
1) ウィンドウズマーク + Shift + s
を押すと、こんな↓↓↓範囲選択をする機能が現れます
2) 選択が終わると、クリップボードにコピーされます↓↓↓
3) さらに上記の
「画像をマークアップして共有するには、ここを選択してください」
をクリックすると
切り取り＆スケッチ ツールが立ち上がります！
これで簡単なお絵描きやトリミングが出来るようになりました
5) 良い感じに調整できたら、右下のファイル保存マークをポチッ！
ファイルが保存！やったーv(o￣∇￣o)
 もちろん、切り取り＆スケッチツールを使わずに
好みのペイントツールを立ち上げて
Ctrl + v で貼り付けてもOK(・ω・)ノ
 こういうシンプルな機能が欲しかった～</description>
    </item>
    
    <item>
      <title>[MSMVP] 2019年7月 Microsoft MVP for Developer Technologies を再受賞しました</title>
      <link>https://h-sao.com/blog/2019/07/13/to-be-rewarded-as-msmvp2019/</link>
      <pubDate>Sat, 13 Jul 2019 13:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2019/07/13/to-be-rewarded-as-msmvp2019/</guid>
      <description>遥佐保（はるか・さお）です
今年も7/1付けでマイクロソフトさまより MVP を受賞させて頂きました
カテゴリー名称は Developer Technologies となります
去年はC++17の機能を勉強していく会を平日の晩にやっていました
（あの勉強会、ほんと楽しい…！）
なんと！10回めの受賞です！！
立派な古株＞＜。
こうやってコミュニティ活動を行っていける環境に感謝しつつ
今期もまた楽しく、役立つ何かを発信し続けていければなと、改めて決意したのでした
今後ともどうぞ、
よろしくお願いします</description>
    </item>
    
    <item>
      <title>[macOS] 自分メモ！Mac手に入れたら最初にすること(多少Windows風)</title>
      <link>https://h-sao.com/blog/2019/06/26/how-to-set-up-my-new-macos/</link>
      <pubDate>Wed, 26 Jun 2019 13:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2019/06/26/how-to-set-up-my-new-macos/</guid>
      <description>新しくMacを入手したときの、自分なりの設定とかインストールするものを列挙してます
Windowsに慣れた人ならきっとやりたくなるキーボード設定なども書いてます
完全な自分メモですが、Windows開発者の方の参考になればー！
最初の最初に入れたいソフト  Google Chrome インストール
Safariが気に入らないというわけではないけど…
https://www.google.com/chrome/
   
 VScode インストール
メモ帳代わりのものがないとつらい
https://code.visualstudio.com/   
AppleStore系  Apple Storeにログイン
 夜フクロウ インストール
Twitterクライアント、最初の方に入れたい(_・ω・)_ﾊﾞｧﾝ…
   
 DisplayMenu インストール
画面の解像度を変更できるアプリ、本来の解像度でみれる！！！   
キー入力系の設定 日本語入力設定をカスタマイズ する Caps Lockキー使ってないから日本語変換に使って、カタカナ変換不要にする
 システム＞キーボード＞
- 入力モードのカタカナをOFF
- Caps Lockの動作「オフの時「英字」を入力」
 キーボードの設定変更 コピペとか日本語変換をWindows風にする
（わたしの場合は外付けキーボードのみ変更しました）
以下、外付けキーボードを接続後に… （今回は英字キーボード）
 システム＞キーボード＞キーボードタブ＞
修飾キー＞ Microsoft2.4GHz Transeiver を選択
Controlキーを　＊Commandに変更
Commandキーを　＾Controlに変更</description>
    </item>
    
    <item>
      <title>[Git] Visual Studio 2019の中のGitコマンドを探せ！</title>
      <link>https://h-sao.com/blog/2019/06/20/where-is-git-exe-on-vs2019/</link>
      <pubDate>Thu, 20 Jun 2019 16:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2019/06/20/where-is-git-exe-on-vs2019/</guid>
      <description>Gitクライアント…
自然に入ってますよね、わざわざ入れなくても。。。( *´艸｀)
Visual Studio 2019 が入ってる環境だったので、Gitクライアントくらいあるじゃろーと思って、検索してみたらありました！
わたしの場合の環境は、ここ↓↓↓
 C:\Program Files (x86)
\Microsoft Visual Studio
\2019
\Enterprise
\Common7
\IDE
\CommonExtensions
\Microsoft
\TeamFoundation
\Team Explorer
\Git
\cmd
\git.exe
 C:\dev&amp;gt;&amp;quot;C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\CommonExtensions\Microsoft\TeamFoundation\Team Explorer\Git\cmd\git.exe&amp;quot; --version git version 2.21.0.windows.1 C:\dev&amp;gt;  バージョンもそこそこ新しいです！
パス長いけど、これ使うか～( ^^) _旦~~</description>
    </item>
    
    <item>
      <title>[Unity] エディタを開く前にUnityのバージョンを調べる方法</title>
      <link>https://h-sao.com/blog/2019/06/19/how-to-check-unity-version-without-open-project/</link>
      <pubDate>Wed, 19 Jun 2019 16:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2019/06/19/how-to-check-unity-version-without-open-project/</guid>
      <description>既存のUnityのプロジェクトを開くとき、バージョンを合わせて開きたいですよね、
開く前に！
そしたら事前にそのバージョンのUnityをダウンロードできますし！
そんなときはここのディレクトリを見ると良いです！
ProjectSettings &amp;gt; ProjectVersion.txt  バージョンがそのまんま書いています( ^^) _旦~~</description>
    </item>
    
    <item>
      <title>[macOS] Homebrewインストールログ2019版</title>
      <link>https://h-sao.com/blog/2019/05/30/how-to-install-homebrew-on-macos-2019/</link>
      <pubDate>Thu, 30 May 2019 12:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2019/05/30/how-to-install-homebrew-on-macos-2019/</guid>
      <description>以前、2015年にも Homebrew をインストールしたログをこのブログに残していました
その時よりは、ずいぶん手順が楽になってたので、もう一度載せておきます
 （以前に載せていたインストールログの様子）[Mac] Homebrewインストールログ - Effectiveさお
http://h-sao.com/blog/2015/05/11/install-log-for-homebrew/  今回は、これの2019年度版です
2019/5/30現在、Homebrew のバージョンは 2.1.4 でした
 Homebrewの本家
http://brew.sh/  macOSでのインストールログ（長いので省略版）
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69  # Homebrew入ってない状態 SAO-MAC:~ sao.</description>
    </item>
    
    <item>
      <title>[Docker] Docker for Macをインストールして Ubuntu の起動や停止まで</title>
      <link>https://h-sao.com/blog/2019/05/29/how-to-install-docker-for-mac/</link>
      <pubDate>Wed, 29 May 2019 12:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2019/05/29/how-to-install-docker-for-mac/</guid>
      <description>Macbook Pro に Docker をインストール＆テスト稼動させた時のメモ
 数年前までわたしはmacのこと本当によく知らなかったので、初めて mac を使ったときには、こういったインストール方法もわからなかった…
誰かの役に立つかも知れないので、初歩的なところも書いておきます
勉強のためのメモなので、用語の使い方が間違っている可能性があります
間違いあれば、遠慮なく @hr_sao まで教えてもらえると嬉しい＞＜
 Docker for Mac のインストール開始 (1) このURLからインストールします
 Install Docker Desktop for Mac
https://docs.docker.com/docker-for-mac/install/  (2) Docker.dmg をダウンロードします
dmg ファイルは Windows で言う所の iso ファイルです
ダブルクリックしたら、マウント状態になります
(3) インストールします
マウントした直後はディレクトリが自動で開くので、
その中の Docker のクジラアイコンを、Applications フォルダにドラッグ＆ドロップすれば、インストールは完了
(4) マウント解除します
その後は Docker.dmg のマウントを解除し（デスクトップにできたアイコンから解除できる）
ダウンロードした dmg ファイルはゴミ箱にポイしてOK
 これだけの事なんだけど、最初は全く判らなかった…
何年もWindowsやLinux系OSで仕事してるのに、 Docker のクジラアイコンを、Applications フォルダにドラッグ＆ドロップ
この作業の意味が、ほんと、よく判らなかった＞＜。
イラストの矢印の通り、クジラアイコンを、イラストの上にドロップしようとして何もおこらないのに腹を立ててました
ユニバーサルデザインなんだろうけど、作業者にある程度の前提知識は必要なデザインなんだと思う
もちろん、「Applications フォルダに ドラッグ＆ドロップ」に気がつかない私が悪いんですけど
 (5) Dockerを初回起動させます</description>
    </item>
    
    <item>
      <title>[Chrome] Google Chromeでモバイル画面を見る User-Agent Swither for Chrome</title>
      <link>https://h-sao.com/blog/2019/04/30/recommended-extensions-user-agent-swither-in-chrome/</link>
      <pubDate>Tue, 30 Apr 2019 11:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2019/04/30/recommended-extensions-user-agent-swither-in-chrome/</guid>
      <description>タイトルそのまんま(&amp;lsquo;ω&amp;rsquo;)
自分メモ
モバイル画面を PCのChromeで見るエクステンションはたくさんありますが、 わたしはずっと「User-Agent Swither for Chrome」を使っています
ただ、そろそろ新しいエージェントにしたいなーと思う今日この頃…
User-Agent Swither for Chrome の更新は、2017年8月3日で止まってるから、新しいモバイル端末の種類が増えてないのよね…(+_+)
まぁそれでも今は不自由してないので、一応紹介(&amp;lsquo;ω&amp;rsquo;)
 User-Agent Swither for Chrome
https://chrome.google.com/webstore/detail/user-agent-switcher-for-c/djflhoibgkdhkhhcedjiklpkjnoahfmg  Chromeのバナーにこんな感じで表示されます
超便利(*^▽^*)
2年くらい前は、Glenn Willsonさんという方が、個人で提供して下さっていたみたいですが
2019年4月30日現在は、提供元が google.com になっています！
良い感じに買ってもらえたのかな～？
こういうのを見ると、ちょっと嬉しくなりますね(&amp;lsquo;ω&amp;rsquo;)
 なんで2年前の画像を持ってるのかというと、
2年前にこの記事を書こうと思って、そのままアップしてなかったからでした…
たはー
 でも、これを書きながら、新しいエージェントさがそーっと思いました
どなたか、おススメのユーザエージェントを書き換えるChromeエクステンション教えて下さい~</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;] std::optionalの使い方を紹介しました</title>
      <link>https://h-sao.com/blog/2019/03/27/how-to-use-optional-nakamecpp-vol13/</link>
      <pubDate>Wed, 27 Mar 2019 23:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2019/03/27/how-to-use-optional-nakamecpp-vol13/</guid>
      <description>少し前ですが、std::optional について nakameguro_feature.cpp vol.13 で発表したので、その資料を置いときます
 nakameguro_feature.cpp vol.13
https://ebisu-effective-modern-cpp.connpass.com/event/111469/
   私的感想としては、optional を使うと
値取得に失敗しても、例外を書くことなく if で処理出来る のが、なんだか良いなぁと思った次第でした
あと、optional の無効状態をどう表すか？
reset() / std::nullopt / {} のどれよ？
という話は、参加者の人たちの意見も GitHub の検索結果と同じで
reset() に軍配があがっていました(&amp;lsquo;ω&amp;rsquo;)
こういう意見交換の場は、本当に恵まれてるなぁ～しみじみ
次回は 3 / 28 (木)開催で、vol.18 です！
 nakameguro_feature.cpp vol.18
https://ebisu-effective-modern-cpp.connpass.com/event/125272/
  お時間ある方は、ぜひお立ち寄りください～！</description>
    </item>
    
    <item>
      <title>[Diary] 2019年もよろしくお願いします</title>
      <link>https://h-sao.com/blog/2019/01/30/hello2019/</link>
      <pubDate>Wed, 30 Jan 2019 12:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2019/01/30/hello2019/</guid>
      <description>去年の振り返りをしてなかったので、ここでまとめとこうかなと…ブログは自分のメモだからね
技術活動 去年は ebisu/nakameguro_feature.cpp という、C++14/17の機能について、知ってる人、調べてきた人がゆるく紹介するという会を続けました
だいたい月に2回のペースだったかな
2018/1/1～12/13 まで、全部で11回分開催してます
出産により(&amp;lsquo;ω&amp;rsquo;) 途中の3月から7月まで、開催をお休みさせてもらいましたが、それでもよく続きましたね☆彡
 feature.cpp
https://ebisu-effective-modern-cpp.connpass.com/event/
  C++17の機能について、みんなのおかげでかなり詳しくなりましたよ(*^▽^*)
ちょうど次回は、1/31(木) 開催～
 nakameguro_feature.cpp vol.15
https://ebisu-effective-modern-cpp.connpass.com/event/118243/
  あとは、大阪でも主催しました meetup app osaka @3
 meetup app osaka@3
https://meetupapp.connpass.com/event/112659/  元々関西出身なので、帰省がてらに開催させて頂きました
こちらもコミュニティ仲間が、たくさんたくさん居いるので、開催できました☆彡
しゃべってくれた人、参加してくれた人、みんなみんなありがとう(*^▽^*)
ネタとしては、AI関係のライブラリの NimTorch を紹介しました
 NimTorch
https://github.com/fragcolor-xyz/nimtorch  （おまけ）
発表じゃないけど、とても印象深かったものがあります！
出産後、初の勉強会参加は、C++創始者の Bjarne Stroustrup 先生の東京大学での講演会でした
 The continuing evolution of C++
https://u-tokyo-ist.connpass.com/event/92085/  動画も年末に公開されてます(*^▽^*)
http://todai.tv/contents-list/2018FY/bjarne_stroustrup/01
これは参加出来て、すごく嬉しかったです
産後、赤ちゃんはかわいいけど、色んな事が辛くて辛くて…
でも、これを機会にまた、自分の情報発信力を信じて、勉強会やっていこうって思えるようになりました
産休/育休中にしてたこと 現在も、保育園がまっっっっっっっっっったく決まらないので、育休中なんですけど
はっきしいって、大したことは何も出来なかった…
体力も落ちて全身ガタガタだし、授乳で寝れないし、情報発信どころか、あんだけやってたゲームも止まってしまいました
だけど、自分の中でマイナスばかりじゃなくて、良い変化もありました</description>
    </item>
    
    <item>
      <title>[macOS] Mojaveへのアップデート</title>
      <link>https://h-sao.com/blog/2019/01/11/updated-macos-to-mojave/</link>
      <pubDate>Fri, 11 Jan 2019 16:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2019/01/11/updated-macos-to-mojave/</guid>
      <description> macOS Mojaveへのアップデート せっかくmacOSを持っているので、Dockerでもサクッと使うか〜と思って、Dockerをインストールしようとしたところ
 Fatal Error
Incompatible macOS Version: 10.11.6.
Docker requires macOS vrsion 10.12.0 or higher.
 あらら、、、あまりにもmacOSをアップデートしてないので、怒られてしまいました
アップデートしようとして、App Store を見てみるも、あれ？どこからアップデートするんだろ？
「アップデート」の中には出てこない…
これ、「アップデート」じゃなくて、「おすすめ」（トップページ？）にありました↓
あぁこれこれ！
「macOS Mojave」をダウンロードして、「開く」を押したら、インストールウィンドウが出てきました！
あれ、、、容量不足zzz
ディスク内を整理…っと
さくっとMojaveへのアップデートは完了しました(^^)
これまで放置してていごめんね、macさん＞＜。
 しかし、アップデート後、なんだか brew コマンドや xcode が変になりました
次回に解決法をまた記載します＞＜。
 </description>
    </item>
    
    <item>
      <title>[Asset] 素材のリンク集ー3Dモデル系</title>
      <link>https://h-sao.com/blog/2018/09/12/collection-of-useful-links-for-3d-models/</link>
      <pubDate>Wed, 12 Sep 2018 08:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2018/09/12/collection-of-useful-links-for-3d-models/</guid>
      <description>プログラマが個人でゲーム作る時にすぐにぶち当たる壁の一つとして、コンテンツの問題があります
いわゆる素材不足…モデルが欲しい、テクスチャが欲しい、IBLしたい…
最終的には有料のものを買うか、デザイナーやサウンドクリエイターを巻き込むかのどちらかになるんですけど
ちょっと試したいだけなんだよねー
パイロット版として雰囲気だけでも掴みたい…
って時には、やはり無料でダウンロード出来るサイトが助かります
そんな時にいつも巡回する私的リンク集です
今回は3Dオブジェクト編
3D モデル系 3Dモデルを落とすときに気を付けないといけないのは、ボーンやリグが入っているかどうか？
クオリティ高いメッシュのモデルがフリーで提供されてるから喜んで落としたけど、リグなしでアニメーション出来なかった…というのは、結構多いです
 おそらく、
* 単に自分の創作物を見せるだけにしたい
* 使いたかったら有料で買ってほしい
* アダルトやVTuberなど、イメージにそぐわない使われ方をされたくない
とかとかかな…？
あくまでわたしの予想なので、となたかデザイナーさん教えて下さいm(__)m
 特に最近はローポリで動作するVTuberモデルがとっても人気です
無料でもダウンロード可能なアセットサイト SketchFab  https://sketchfab.com
  これはホントにおススメです
3D viwer サイトでは、ここが1番良いんじゃないかなー？！
写真や動画紹介より相当判りやすいです(*^▽^*)
対象モデルがブラウザ上でリアルタイムレンダリングされます！
カメラをぐりぐり動かして確認出来ます！
何より投稿数がとても多く、活発です！
クリエイター作品投稿サイトの意味合いが強いので
たまーに無料でシェアしてくれている素材もある、と思ったほうが良いですね
値段を付けてアセットを売ってくれているクリエイターさんも居てます
cgtrader  https://www.cgtrader.com/3d-models
  安心して(多分)ダウンロードができるアセットサイトです
SketchFabほどの華やかさはありませんが、リグ付きゲーム素材が落とせます
もちろん購入も可能
タイミングによって、アカウントを作るだけで、$5 とか $20 とかもらえる場合があります
(余談１)
他にもいっぱい良いデータを持ってるサイトは多いんですけど、最終的にわたしが気に入ってる（覚えてる）のは上記かなー
(余談２)
3Dmodel free download で検索すると、めーーーーーっちゃ多くのサイトがヒットします
が！？
ダウンロードするサイトや、モデルデータそのものに、ウィルスや変な広告が混じっている場合が結構あります
上の cgtrader に「安心して(多分)」と書いた理由はそのため(&amp;lsquo;ω&amp;rsquo;)
全部のデータをチェックしたわけじゃないけどね…
 モデルデータをダウンロードしたときに、変なサイトに誘導された モデルデータの中に、よくわからないexeファイルが含まれてた モデルデータのマテリアル割り当ての一部に、広告と思わしき変なテクスチャが紛れていた  こんな経験を数多したわけですよ、たはー(´・ω・`)</description>
    </item>
    
    <item>
      <title>[Unity] Macのトラックパッドのみでシーンビューを動かす</title>
      <link>https://h-sao.com/blog/2018/08/19/unity-cameras-operation-not-using-mouse/</link>
      <pubDate>Sun, 19 Aug 2018 10:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2018/08/19/unity-cameras-operation-not-using-mouse/</guid>
      <description>動作環境
 Mac 上で Bootcamp してる Windows10 Unity2018  Unityのシーンビューを操作しようとして、トラックパッドだけで動かすやり方が判らなかったので、そのメモです
 // マウスが引っ越ししで、どこにあるか判らなくなった
  見たい Game object に F key で、オブジェクトにフォーカス option key とトラックパッド1本指で、回転 トラックパッド2本指で平行移動
（注視点の位置は一緒に移動します）  ちょっとやりにくいけど、出来ないよりマシかな( ..)φメモメモ</description>
    </item>
    
    <item>
      <title>[Diary] 2018年もよろしくお願いします</title>
      <link>https://h-sao.com/blog/2018/02/08/hello2018/</link>
      <pubDate>Thu, 08 Feb 2018 19:50:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2018/02/08/hello2018/</guid>
      <description>ここ毎年…新年のブログ挨拶は1月2日に行ってたのですが
今年は大幅に1カ月も遅れてしまいました&amp;rdquo;(-&amp;ldquo;&amp;rdquo;-)&amp;rdquo;
今更ですが、今年もどうぞ、よろしくお願いします(&amp;lsquo;ω&amp;rsquo;*)
ゲーム 去年は身辺の変化が大きい年だったこともあり
2年間続けていたソーシャルゲーム「神獄のヴァルハラゲート」のギルドオーナーをついに降りることになりました
時間的に、オーナー業がこなせなくなってきなのです…＞＜。
毎日参加するだけがオーナーじゃないですしね…
ま、この場で報告することではないですけど(;^_^A
自分にとってはすごく大きな決断だったので、すんません、最初の振り返りはこれになるかな…
ちなみに、受け入れ先のギルドを慎重に探し、そこのオーナーに話をつけ、
自分のギルメンさんもまとめて一緒にギルド合併として受け入れてもらいました
ギルドの統廃合って、どのゲームでも実態としては
メンバーがバラバラになるのが常なのですが、それだけは避けたくて、めちゃ頑張りました
仮想のゲーム世界なのに、コミュ力が超重要です…いやマジで(; ･`д･´)
今は、いちギルメンとして、引き続き毎日聖戦に参加しています
オンラインゲームに終わりは無いので…
 ガチャ画面…(; ･`д･´)
このブログを書いてる最中にちょっと10連を引いてみたら、SS確定画面だった！
 技術活動 去年は ebisu_optimized.cpp という、読書会 /兼ディスカッション会 /兼勉強会 的なコミュニティ開催を月に2～3回のペースで行っていました
2017/3/30～11/9 まで、全部で15回分開催してます！よく続きました…(((ｕдｕ*)ｩﾝｩﾝ
 ebisu.cpp
https://ebisu-effective-modern-cpp.connpass.com/event/
  おかげさまで、オライリー社から出ている
「Optimized C++ ~最適化、高速化のためのプログラミングテクニック」
は完読♪
その勢いを保ったまま、今は引き続き ebisu_feature.cpp という、C++14/17に関する新機能について、 参加者のみんなで勉強会が続いています(&amp;lsquo;ω&amp;rsquo;*)
ちょうど次回は、2/14(水) 開催です～
こちらも、もうこちらの開催も5回目です！C++17の新機能についての勉強会になっています☆彡よろしくっ！！
 ebisu_feature.cpp vol.5
https://ebisu-effective-modern-cpp.connpass.com/event/79032/
  
あとは、大阪で主催した meetup app osaka @2
 meetup app osaka@2
https://meetupapp.connpass.com/event/73674/  ここではUnity系の話を発表
久しぶりに関西のコミュニティのみなさんにお会いできて、楽しかったです♪</description>
    </item>
    
    <item>
      <title>[Unity] Unityのライセンス情報をアンインストールしたい</title>
      <link>https://h-sao.com/blog/2017/11/02/how-to-uninstall-unity-license-information/</link>
      <pubDate>Thu, 02 Nov 2017 09:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2017/11/02/how-to-uninstall-unity-license-information/</guid>
      <description>Unityをアンインストールしたけど、あれ？ライセンス情報が残ってる(?_?)
というのが調べたきっかけです
PCからUnityの情報を完全消去したいときの参考に
ライセンス情報 (Unity5.x系) ライセンスファイルは、Unityをアンインストールしても消えません＞＜
以下にライセンスファイル(.ulfファイル)が残っています
 C:/ProgramData/Unity/Unity_v5.x.ulf C:/Users/(username)/AppData/Local/VirtualStore/ProgramData/Unity/
（UACで C:/ProgramData/Unity/ へアクセス制限されてる時）  で…
確かに上記を消したら、アクティベーション情報は消えるのですが
Unityにログインしたユーザ情報は残ってる様です
キャッシュ的なものも消さないと、完全アンインストールにはならないみたい
その他、アンインストールで消えないディレクトリ  C:/Users/(username)/AppData/Local/Unity C:/Users/(username)/AppData/Roaming/Unity
上記２点には、エディタに関する何か？キャッシュ的な何か？が残っています
起動した際の、Unityプロジェクトの表示とか…
おそらくこの２つのディレクトリ以下に、ユーザ情報も入ってるみたいです
 C:/Users/(username)/AppData/RoamingLocalLow/Unity
この下もちょっとよく判らないですが、
このディレクトリ配下の「Asset Store-5.x」の下には
アセットストアからダウンロードしてきたパッケージファイルが入っていました
（.unitypackage）
  まとめ 逆の言い方をすると、
上に書いたディレクトリ４つ
 C:/ProgramData/Unity/ C:/Users/(username)/AppData/Local/Unity C:/Users/(username)/AppData/Roaming/Unity C:/Users/(username)/AppData/RoamingLocalLow/Unity  を消せば、Unityをアンインストールしなくても
ライセンス情報のリセット、ユーザ情報のリセットが可能でした
 もちろん
C:/Users/(username)/AppData/RoamingLocalLow/Unity/Asset Store-5.x
の下は、ライセンスファイルとは無関係みたいです
 Unity2017系は？ Unity2017 では、ライセンスディレクトリは同様で、ライセンスファイル名が
 Unity_lic.ulf  になってるみたいです
（消さないといけないディレクトリまでは、2017系では調べてないので、ごめんなさい）
参考：
 アクティベーションに関する FAQ - Unity公式
https://docs.unity3d.com/ja/current/Manual/ActivationFAQ.html(日本語)
https://docs.unity3d.com/Manual/ActivationFAQ.html(英語)
 Unityの再インストール - FreelyApps</description>
    </item>
    
    <item>
      <title>[Windows10] コントロールパネルの場所</title>
      <link>https://h-sao.com/blog/2017/10/31/where-is-controlpanel/</link>
      <pubDate>Tue, 31 Oct 2017 08:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2017/10/31/where-is-controlpanel/</guid>
      <description>コントロールパネルはいずこへ…(;^ω^)
Windows10を使ってかなり経ちますが、以前の見慣れたコントロールパネルを出したくて、何となく探したことありませんか？
コントロールパネルが無くても、Windows10 仕様の「設定」アプリでも、そこまで困ることは無いのですが…
Windows10 で Windows マーク（スタートメニューを出すマーク）を押した際の一覧に
「コントロールパネル」は無いんですねー
代わりに、「設定」なるものが…
ちゃうねん、これちゃんねん(/ω＼)
検索すると、マイクロソフトさんの公式サポートサイトでも、ちゃんと書かれてました
 Where is Control Panel? - Microsoft Support
https://support.microsoft.com/en-us/help/13764/windows-where-is-control-panel  普通に、スタートメニューを押した後に
「コントロール」or「Control」で検索すると候補に出てきます
 ちなみに「コントロール パネル」で検索する時には、「コントロール」と「パネル」の間には半角空白が必要みたい…
 これこれ…( ^ω^ )</description>
    </item>
    
    <item>
      <title>[Unity] エディタ上でゲーム実行中にエディタの色を変える</title>
      <link>https://h-sao.com/blog/2017/10/26/change-playmode-color-on-unity/</link>
      <pubDate>Thu, 26 Oct 2017 23:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2017/10/26/change-playmode-color-on-unity/</guid>
      <description>Unityエディタ上で、ゲームを実行中（再生中）に、色を変える設定です
// Unity的には「プレイモード」と呼ぶみたいです
 プレイモード時にエディターの色を変える - Unity公式チュートリアル動画 https://unity3d.com/jp/learn/tutorials/topics/tips/play-mode-editor-tint
  上記公式動画↑↑↑の 20秒～32秒くらいの間で、設定の操作を教えてくれてます
いちおここにも書いておくと
 Edit &amp;gt; Preferences &amp;gt; Colors &amp;gt; Playmode tint
 で実行中のエディタの色を変えることが出来ます
いつも、Unityをインストールして最初にやってるんだけど、
いつも忘れて結局調べてるので…(*ﾉωﾉ)</description>
    </item>
    
    <item>
      <title>[PowerShell] ZoneIDとPowerShellの実行ポリシー</title>
      <link>https://h-sao.com/blog/2017/10/20/zoneid_and_powershell_excutionpolicy/</link>
      <pubDate>Fri, 20 Oct 2017 19:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2017/10/20/zoneid_and_powershell_excutionpolicy/</guid>
      <description>PowerShellでちょっとしたツールを動かそうと思って、初歩的なところであれ？となったので、書いておきます
PowerShellの実行ポリシー（Execution Policy）は、
1  &amp;gt; Get-ExecutionPolicy   このコマンドで確認できます
Windows10のデフォルトでは Restricted になっていて、ps1 ファイルをコマンドライン上から実行することが出来ません
なので
1  &amp;gt; Set-ExecutionPolicy RemoteSigned   を実行して、 RemoteSigned にセキュリティポリシーを変更します
しかし、RemoteSigned になってることを確認したのに、
しかしなぜか、ps1 ファイルの実行時にセキュリティエラーとなってしまいました
なんだこれ（↓）は…？
1  セキュリティ エラー: PSSecurityException   なんでだろーと思ってたのですが、何てことはない
実行しようとしてた ps1 ファイルは、インターネット越しに入手したものでした
（自分のサイトから落としてきたんだけどね）
こんな感じ↓↓↓
どうやら、インターネット越しに入手したファイルには ZoneID というのが付与されるらしく
Windowsはローカルファイルと区別出来るようにしてくれてるんですね～
ローカルファイルとして扱いたい時には、ポチっと「ブロックの解除」を押せばOKです
ちゃんと、ps1 ファイルが動作するようになりました(^^♪
ZoneID…知らなかった…＞＜。
参考：
- WindowsでPowerShellスクリプトの実行セキュリティポリシーを変更する - @IT
http://www.atmarkit.co.jp/ait/articles/0805/16/news139.html</description>
    </item>
    
    <item>
      <title>[Android] 謎のエラー「Unable to start debugging.」が出たときの対応</title>
      <link>https://h-sao.com/blog/2017/08/18/how-to-fixed-error-unable-to-start-debugging/</link>
      <pubDate>Fri, 18 Aug 2017 18:40:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2017/08/18/how-to-fixed-error-unable-to-start-debugging/</guid>
      <description>Androidデバッグで実行時エラー 環境
 Windows10 x64 Visual Studio 2017 Project type: Native-Activity Application (Android)  ある時…Visual Studio で作っている Android プロジェクトが、実行時エラーになりました
 Unable to start debugging. Check your debugger settings by opening project properties and navigating to &amp;lsquo;Configuration Properties&amp;ndash;&amp;gt; Debugging&amp;rsquo;
 デバック出来ないからね！プロジェクトの設定見てね！的な意味みたいですが
デバッグモードで動かしてるし…
一体どこの何の事を言ってるのか判らない…＞＜。
リリースモードならOKなのかしら？と思っても、同様のエラー&amp;rdquo;(-&amp;ldquo;&amp;rdquo;-)&amp;rdquo;
解決案（わたしはこれでは解決しませんでしたが） 検索しても、実のある回答は特に出てこず…
唯一、解決っぽいのが、NVIDIAさんのフォーラムに載ってました
 CodeWorks for Android 1R4: Unable to start debugging - NVIDIA DEVELOPER
https://devtalk.nvidia.com/default/topic/957019/codeworks-for-android-1r4-unable-to-start-debugging/  元ネタリンクはMicrosoftさんのGitHub情報みたいです
 MEF - GitHub Microsoft/VSProjectSystem
https://github.com/Microsoft/VSProjectSystem/blob/master/doc/overview/mef.md#mef-inside-visual-studio  簡単に言うと、VSの Developer Command Prompt を使って、キャッシュクリアしてみたら？というもの</description>
    </item>
    
    <item>
      <title>[Android] Hyper-Vで使うVisual Studio Emulator for Androidの最初の一歩</title>
      <link>https://h-sao.com/blog/2017/07/27/setting-visual-studio-android-emulator-on-hyper-v/</link>
      <pubDate>Thu, 27 Jul 2017 18:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2017/07/27/setting-visual-studio-android-emulator-on-hyper-v/</guid>
      <description>どうもうまくAndroidエミュレータが動かない… いわゆる ADV Manager をつかって、Androidをエミューレートしたいのですが
なぜかうまく起動しない…
環境
 Windows10 x64 Visual Studio 2017  Android SDK Managerをよく見てみると、HAXM installer が &amp;ldquo;Not compatible with Windows&amp;rdquo; となっています
ふむ…
無理矢理 HAXM のインストーラーをダウンロードしてきても、こんな感じでエラー
 This computer does not support Intel Virtualization Technology (VT-x) or it is being exclusively used by Hyper-V, HAXM cannot be installed.
Please ensure Hyper-V is disabled in Windows Features, or refer to the Intel HAXM documentation for more information.
 なんですと…Hyper-Vが入ってたら使えないよだと…(｀・ω・´)</description>
    </item>
    
    <item>
      <title>[Unity] 常にカメラの前にSpriteを出す</title>
      <link>https://h-sao.com/blog/2017/06/21/unity-sprite-on-front-of-camera/</link>
      <pubDate>Wed, 21 Jun 2017 18:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2017/06/21/unity-sprite-on-front-of-camera/</guid>
      <description>Unityでカメラに追従して、前面にSpriteを出す方法 これ、本当は、カメラの子供として指定すればもっと簡単なんですけど…
testScript.transform.parent = Camera.main.transform  この場合、
カメラにアニメーションが付いてる時（メインカメラは固定ポジションのままの時）に
うまく乗せられなかったりして、
面倒だなーと思い、Update毎に自分で位置を更新することにしました
（変に親子関係があるのも、後で何か制限されたらやだなーとかとかもあり…）
以下を参考にしたら、簡単にカメラの前に表示するスプライトを簡単に表現できました
 カメラからの距離で求める錐台のサイズ
https://docs.unity3d.com/jp/540/Manual/FrustumSizeAtDistance.html  public class TestExecutor : MonoBehaviour { private Texture2D blackTexture; private SpriteRenderer testSprite; void Start() { // Create black texture blackTexture = new Texture2D(32, 32, TextureFormat.RGB24, false); blackTexture.SetPixel(0, 0, Color.white); blackTexture.Apply(); // Create Sprite var sprite = Sprite.Create( texture: blackTexture, rect: new Rect(0, 0, blackTexture.width, blackTexture.height), pivot: new Vector2(0.5f, 0.5f) ); // スクリプトからSprite生成 testSprite = new GameObject(&amp;quot;TestSprite&amp;quot;).</description>
    </item>
    
    <item>
      <title>[SSH] ポート指定GitサーバにSSHでアクセスできない時(Windows/GitExtensions)</title>
      <link>https://h-sao.com/blog/2017/06/01/when-cant-connect-to-git-server-for-ssh-on-windows-gitextensions/</link>
      <pubDate>Thu, 01 Jun 2017 18:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2017/06/01/when-cant-connect-to-git-server-for-ssh-on-windows-gitextensions/</guid>
      <description>最近… 機械学習関係をやってたんですけど、Unityをまた触ることになっています
てんやわんやして、前回更新から2カ月も経ってしまった…(+o+)
今回また、タイトル名のGit/SSH関係でオロオロしたので、同現象で困ってる人の助けになれば幸いです
(現象)初回SSH接続に失敗する 環境  Windows7/64bit GitExtensions キーペアを用いた認証でのSSH接続 GitサーバへのSSHアクセスは、オリジナルのポート番号を割り当てている  こんな環境で作業していました（古いPCからアクセスしたかったので、Win7なのです…）
 初回クローンするために、Gitサーバにアクセスしようと、秘密鍵を .ssh ディレクトリ以下にコピーしておきます
デフォルトのSSH秘密鍵置き場は
c:\Users[ユーザ名].ssh/id_rsa
です
 GitExtensionsを利用してGitリポジトリからクローンしようとすると、以下のエラーが…
   fatal: Could not read from remote repository.
Please make sure you have the correct access rights and repository exists.
 え、なんで…？
(解決)ポート番号ありでknown_hostsに登録する アドレスも合ってる！
リポジトリもある！
サーバには公開鍵、クライアントには秘密鍵を置いてる！
これでなぜアクセス出来ないのか、解明に半日かかってしまいました…トホホ
自分のインフラ力の無さに涙が出そうです
答えを書きますと、
 先にコマンドプロンプトからSSHアクセスを行っておく ポート番号の指定がある場合は、ポート番号指定でアクセスしておく  これで解決しました…(^_^;)
わたしの場合のポイントは、ポート指定でした
 コマンドプロンプトを立ち上げます
わたしの場合、GitExtensionsを使ってたので Tools &amp;gt; Git bash から立ち上げました
 SSH のテスト接続を行います</description>
    </item>
    
    <item>
      <title>[TensorFlow] TensorFlow on Windows GPU版インストール方法</title>
      <link>https://h-sao.com/blog/2017/04/10/how-to-install-tensorflow-gpu-on-windows/</link>
      <pubDate>Mon, 10 Apr 2017 18:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2017/04/10/how-to-install-tensorflow-gpu-on-windows/</guid>
      <description>前回、TensorFlowの環境を作るために、Anacondaをインストールしました
 [Anaconda] Anaconda for Windowsインストール方法
http://h-sao.com/blog/2017/03/29/how-to-install-anaconda-for-windows/  その続きで、TensorFlow GPUバージョンを入れたいと思います
わたしの環境は以下です
 Windows10 x64 NVIDIA GeForce GTX 960 Anaconda 4.3.1 For Windows  はじめに… TensorFlow公式サイトのインストール方法では、残念ながらうまく動作させることは出来ませんでした…(´・ω・`)
 Installing TensorFlow on Windows
（公式サイトだけど、2017/4/10時点、わたしの環境ではダメだった）
https://www.tensorflow.org/install/install_windows  どこを見たら良いかというと、TensorFlowのGitHubの方 です…！！！
ここ見るべし(。-`ω-)ｸﾜﾜｯ
 TensorFlow-Github-Install_Windows tensorflow/tensorflow/docs_src/install/install_windows.md
https://github.com/tensorflow/tensorflow/blob/master/tensorflow/docs_src/install/install_windows.md  今回の全インストールログは、わたしのGistにアップしておきました
→ Install_log_on_Windows_for_TensorFlow_GPU.log
では、やった手順を記載します！
1) NVIDIA CUDA Toolkit をインストールする TensorFlowにはCPU版とGPU版が提供されています
CPUのみでも動くのですけど
開発環境の構築というのはなんともめんどくさいので
最初に出来る事をやっとくことにします
まずは、CUDA のインストール
※CUDAとは、GPUを活用するための開発環境です
GPUを使うには、NVIDIAのCUDAを入れる必要があります
 CUDA Installation Guide for Microsoft Windows
http://docs.nvidia.com/cuda/cuda-installation-guide-microsoft-windows/
2017/4/10時点の NVIDIA CUDA Toolkit のバージョンは 8.</description>
    </item>
    
    <item>
      <title>[Anaconda] Anaconda for Windowsインストール方法</title>
      <link>https://h-sao.com/blog/2017/03/29/how-to-install-anaconda-for-windows/</link>
      <pubDate>Wed, 29 Mar 2017 20:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2017/03/29/how-to-install-anaconda-for-windows/</guid>
      <description>ちょっとPCのグラフィックボードを新しくしたので、TensorFlowでなんかモデルでも作ってみるかということで、Pythonを使うためにAnacondaをインストールしました
初回のインストールでは何も問題が起きなかったのですが、Anacondaのバージョンを上げようとして、なんか色々やってるうちに、エラーにはまったので、その解決メモです
（ただし、あまり良い解決方法じゃありません、ごめんなさい）
Anacondaのインストール わたしの環境は以下です
 Windows10 x64 NVIDIA GeForce GTX 960 Anaconda 4.3.1 For Windows  このAnacondaはPython 3.6 に対応しています
Anaconda 4.3系は Pythonの 2.7, 3.4, 3.5, 3.6 をサポートしている様です
 ANACONDA CHANGELOG - 2017-01-31 4.3.0 Highlightsより
https://docs.continuum.io/anaconda/changelog  実は、わたしは何度もAncondaのインストールとアンインストールを繰り返しました
すると、再インストール時にはエラーメッセージ
 Failed to create anaconda menus
 がインストール時に出るようになってしまいました
インストールする権限の問題の様です
おかしいなぁ…
Administrator権限で起動してるのですが、出てしまいます…（´-`）.｡oO
これは、
 再インストールするディレクトリを変える Just me インストール Administrator権限で起動  この3点をすれば、怒られずにインストールできたのですが…
わたしのインストールしたいディレクトリは c:\utils\Anaconda3 なのです！
インストールしたいディレクトリを変更するって…ちょっとヤダなぁと思い
ダメもとで
 PCのインストール時に作った Administrator 権限のユーザでログイン All Users インストール 更にAdministrator権限で起動  にしてみたら、うまく同じインストールディレクトリに</description>
    </item>
    
    <item>
      <title>[Chrome] Google Chromeのマルチプロファイル設定</title>
      <link>https://h-sao.com/blog/2017/01/04/how-to-use-multiple-browser-profiles-in-chrome/</link>
      <pubDate>Wed, 04 Jan 2017 23:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2017/01/04/how-to-use-multiple-browser-profiles-in-chrome/</guid>
      <description>Google Chrome を使って、Webサイトの開発をしている人向けの情報です
自分のChromeのユーザプロファイラを使わずに、開発は別のプロファイラを使いたいってこと、ありますよね…？
[プランA] ユーザプロファイラを切り替える Google Chrome のユーザデータを、開発用と自分個人用とに分けたい
開発用のモバイルモードで見てるときに、普通にPCブラウジングがしたい
とかいうときのために（か、どうか分かりませんが…）
Google chrome は複数ユーザに対応しています
 chrome://settings/ にアクセス
もしくは、メニューの「設定」を押す
 「ユーザ」の設定項目があるので、追加します
 アイコンと名前を選択して「追加」します
（わたしの場合は適当に Development と付けました）
 ユーザ名が右上に表示されるようになり、新しい「Development」ユーザでブラウザが立ち上がります
  Extension や閲覧履歴は、完全に今まで使っていたものとは別になっているので
新規プロファイルが使い放題です(*ﾉωﾉ)
これまで使っていたユーザは「ユーザ－１」
開発用のユーザは「Development」
で、使い分けることが可能になりました
[おまけ] 起動時に Development ユーザを指定して起動する方法 ちなみに、デフォルト起動はもちろん、これまで使っていた「ユーザー１」で立ち上がります
ショートカットなどで、さっき作ったDevelopmentユーザがいきなり立ち上がって欲しいときは
以下のように「profile-directory」起動オプションを設定してあげると
任意のユーザプロファイルで立ち上がります
&amp;quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&amp;quot; --profile-directory=&amp;quot;Profile 2&amp;quot;   ※Chromeのショートカット設定にしておくと便利です
 わたしの環境では、&amp;rdquo;Peofile 2&amp;rdquo;という名前でしたが、これは作った環境によって異なっているはずです
Chromeユーザプロファイルのデフォルトの位置はこちら↓↓↓
 &amp;ldquo;C:\Users[Winユーザ名]\AppData\Local\Google\Chrome\User Data\Profile x&amp;rdquo;
 ちなみに、これまで使っていた自分の環境である「ユーザー１」は「Default」というディレクトリ名です
 &amp;ldquo;C:\Users[Winユーザ名]\AppData\Local\Google\Chrome\User Data\Default&amp;rdquo;
 さて、プランAのプロファイル切り替えでも、まぁ用途は足りるんですけど
1点だけ、気に入らないところがありました…
確かに、完全にプロファイルは別になるのですが
起動時の画面サイズは、プロファイル間で共有されてしまうのです</description>
    </item>
    
    <item>
      <title>[Diary] 2017年もよろしくお願いします</title>
      <link>https://h-sao.com/blog/2017/01/03/hello2017/</link>
      <pubDate>Tue, 03 Jan 2017 16:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2017/01/03/hello2017/</guid>
      <description>遥佐保（はるか・さお）です
2017年最初のブログになります！
今年もよろしくお願いします(^_^)
MSMVP 2017年1月度受賞 なんと、Microsoft Most Valuable Professional の再受賞を Windows Development のカテゴリで頂きました
信じられないことに、8回目の受賞となります
去年はいろんなジャンルの技術を取り扱った勉強会を開催し
何のかんのと楽しく過ごさせていただきました
それもこれも、関わってくださる全ての方とのつながり、出会いあってこそだと、いつも思っております
講演を快諾してくださる講師さま、
オンラインという場所と時間が限られてしまう勉強会に参加してくださるみなさま、
コミュニティ活動を支援してくださる上司、
そして何より、一緒に勉強会を盛り上げてくれるスタッフのみなさま、
本当に本当に、いつもわたくしの思い付きの様な企画に
お付き合いくださいまして、ありがとうございます
 年末にやった meetup app tokyo@2 の様子
めっちゃ勉強になったし、緊張した
  また、有志のコミュニティを支援するプログラムを
企業として変わらず提供し続けて下さるマイクロソフト社にも
変わらず感謝しております
自ブログに記載するには大変恐縮ではありますが、僭越ながらお礼申し上げます
本当にありがとうございます
 Microsoft Global Summit 2017に招待された時のレジストレーション会場になった Hotel Hyatt(^^) 居心地最高でした
  昨年度の活動 去年は、ひそかに1月のマイクロソフト社主催のインターナルイベントにて、ちょっとだけセッション持たせていただいたのを皮切りに、小規模な講演をちょこちょこと、
大きなところでは、C++、UI、Unity、Deep Learning を特集した勉強会を開催するなど、
思うままに知的好奇心を満たせた感じになりました
仕事では良いことも悪いことも、思い返せないくらい、いろんな出来事がありまして…
いやー１年、ほんとに、色々イベントがありすぎました((+_+))
こんなに環境がころころ変わる体験も、なかなか珍しいと思いますが、何とか順応して（？）社会人生活を満喫しています
仕事の番外編ですが
盛岡の専門学校で講演させて頂いた晩に、
現地の方々に連れて行ってもらった「サブカルバーAE」ってところ
ここ、最高です(´艸｀*)
また、盛岡に出張行きたいな…
 サブカルバーAE
http://zenmetu.sakura.ne.jp/bar/barae.html
  ソーシャルゲーム三昧 今年は…もうこれしかやってません
毎日欠かすことなく、1日最低2時間やってます( ;∀;)</description>
    </item>
    
    <item>
      <title>[Outlook] 使わなくなったOutlook on the webの予定表（カレンダー）を削除する方法</title>
      <link>https://h-sao.com/blog/2016/12/21/delete-outlook-on-the-web-data/</link>
      <pubDate>Wed, 21 Dec 2016 18:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2016/12/21/delete-outlook-on-the-web-data/</guid>
      <description>Office365とかの Outlook カレンダーではなく
Webベースでアクセスできる Outlook on the web について
データの削除がとてもややこしかったので、ちょっとメモしておきたいと思います
かつての Windows Liveカレンダー 昔は、Windows Liveカレンダーという名称で、カレンダーサービスがあったのですが
最近になり、Outlook on the web というサービス名に変わった様です
https://calendar.live.com/calendar/calendar.aspx
それに伴い、ちょっとずつ使い勝手も変わってきたりして…
わたし自身が
Googleにもカレンダーがあり、サイボウズにもあり…カレンダーだらけだったので
ちょっと過去データを整理しようと思ったのが、このブログのきっかけです
以降、「予定表」とあるのは、カレンダーの事を指しています
マイクロソフトさんの用語で統一して書きたいと思います
問題点が２つ起きた  Outlook on the web のメインの予定表が消せない Windows10 カレンダーアプリの情報が同期されない（消せない）  今日はこれを解決したいと思います…
＜問題1＞不要な予定表を削除したいが、メインは消せない 実際に、オフィシャルサイトには、予定表の削除の方法は書いていないのです…
 Outlook on the web で予定表を使用する
https://support.office.com/ja-jp/article/Outlook-on-the-web-で予定表を使用する-8cfd8a5e-de9a-4468-9225-8611c8c8c7b0  しかし、Outlook on the web の方で、予定表を削除することは出来るようです
該当する予定表の上で、右クリックしたら、&amp;rdquo;削除&amp;rdquo; が出てきます
↓↓↓
しかし、メインの予定表は消せないみたいです
（削除が出てこない）
↓↓↓
とにかく情報を整理したいだけなのに…(+o+)
＜問題2＞Windows10 カレンダーアプリの情報は削除されない メイン以外の予定表は消せるので、Outlook on the web上で操作するんですけど
クライアントアプリである、Windows10 付随のカレンダーには、一向に反映されません
あれ、消したはずの予定表がいつまで経っても消えない…</description>
    </item>
    
    <item>
      <title>[UE4] Unreal Engine4のインストール要件</title>
      <link>https://h-sao.com/blog/2016/11/16/ue4-install-requirements/</link>
      <pubDate>Wed, 16 Nov 2016 20:45:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2016/11/16/ue4-install-requirements/</guid>
      <description>仕事上、色んな Game Engine を試しておりまして
先日、クリーンで、比較的低スペックな Windows10 PC に
Epic さんの Unreal Engine 4 をインストールしたときに、はふん？と思った件のメモです
Enreal Engine 4 のダウンロード はダッシュボードから出来ます (ログインが必要)
 Enreal Engine 4 ダウンロード
https://www.unrealengine.com/dashboard  迷わず、Windows のプラットフォームを選択！
落としてきた EpicGamesLauncherInstaller-2.12.14-3176191.msi (2016/11/16現在) を実行します
あれ？
 コンピューターにXINPUT1_3.dll がないため、プログラムを開始できません。この問題を解決するには、プログラムを再インストールしてみてください。
 はて。。。何やら懐かしい香りのDLL名がエラーに上がっています(￣▽￣)
UE4 のインストール要件って、なんだったっけ？と思ったのですが、ダウンロードの画面には、何も書かれてないんですよね～
よく判らないから、ドキュメントを見てみよう！ということで
「ハードウェア＆ソフトウェア仕様」のドキュメントサイトを見ていくと
ソフトウェアのインストール要件が書かれていました
 ハードウェア＆ソフトウェア仕様
https://docs.unrealengine.com/latest/JPN/GettingStarted/RecommendedSpecifications/index.html
 エンジンの実行環境
OS : Windows 7 / 8 64-bit
DirectX Runtime : DirectX End-User Runtimes (June 2010)   おぉぉ、DXのランタイム！お前さんだったのかぁ～
というわけで、DirectX End-User Runtimes (June 2010) を入れたら、すんなり UE4 のインストールは出来ました(^o^)</description>
    </item>
    
    <item>
      <title>[Maya] Maya2015設定ウィンドウの開き方</title>
      <link>https://h-sao.com/blog/2016/11/15/settings-maya2015-part1/</link>
      <pubDate>Tue, 15 Nov 2016 19:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2016/11/15/settings-maya2015-part1/</guid>
      <description>Mayaはいろんな機能がありますね…
設定の開き方すら判らないという恥ずかしい思いをよくしているので、いざというときの自分のメモです
記載環境は、Maya2015 on Windows10 です
レンダリングエンジンの変更 Mayaのデフォルトレンダリングは OpenGL になっています
DirectX11 に変更する方法
 プリファレンスウィンドウを開きます
Windows
&amp;gt; Settings/Prederences
&amp;gt; Preferences
 Display カテゴリの Viewport 2.0 に
Rendering engine を変更できるドロップダウンリストがあるので、そこで変更できる
  レンダー設定 上記はレンダリングエンジンについてでしたが、レンダリングの設定を触るところはまた別の箇所になっています
 レンダー設定のウィンドウを開きます
Windows
&amp;gt; Rendering Editors
&amp;gt; Render Settings
 レンダー設定ウィンドウ
 使うレンダリングの設定を、ここで選ぶことが出来ます
わたしの場合は Maya Hardware 2.0 を選択したりしてます
  ハードウェアレンダラ2.0設定 浮動小数レンダーターゲットを有効化したいとき
 この画面は、Maya2015固有みたいです
  Mayaの作業画面（ビューポート）の Renderer の Viewport2.0 の横にある、四角いチェックを押してみます
 Hardware Renderer 2.0 Settings のウィンドウが表示されます</description>
    </item>
    
    <item>
      <title>[Unity] Unity用YEBISプラグインのお話してきました</title>
      <link>https://h-sao.com/blog/2016/08/09/prerelease-yebis-for-unity-beta/</link>
      <pubDate>Tue, 09 Aug 2016 18:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2016/08/09/prerelease-yebis-for-unity-beta/</guid>
      <description>たまには、仕事のお話を…
現在、Unityのプラグインを絶賛開発中で、わたしも少し関わらせて頂いてます
なんのプラグインかというと、ポストエフェクト処理がかけられる「YEBIS」というプロダクトのプラグイン化になります
今、ベータ版として期間限定のトライアルを出し中。。
 YEBIS for Unity (beta) ダウンロードサイト https://siliconstudio.github.io/YebisForUnityBeta/  あぁ、なんでUnityのアセットストアじゃないのかって…？
実は、「特濃！ゲーム開発塾５」というイベントでこのプラグインの話をしてきたのですが、ストアの申請が間に合わず…＞＜
とりあえず、GitHub Pagesに置いてます
（なので、アセットストアに公開するまでの、期間限定サイトです）
ちなみに、イベントURLはこれ
 特濃！ゲーム開発塾５
http://eventregist.com/e/tokunou5
https://www.facebook.com/IwateGameFactory/  岩手県盛岡市はIT支援がとても盛んらしく、こんなゲーム開発者向けのお祭りイベントがあるんですね~
わたしが参加した日程は 8月9日(火)
対象となる人はプログラマー、もしくはプログラムを将来仕事にしたい人向け
現在、DMM.comラボにてプロデューサをされている松本卓也さんがメイン講師をされました
わたしは３０分ほどセッション時間を頂き、このUnityプラグインのお話をさせて頂きました
発表に利用した資料はこれです
 ベータ版なので動作不安定な点がいくつもあるのですが、人柱的に試しても良いかなーという心優しい方は、トライしてみてくださいm(__)m
ちなみにドキュメントはこちら
 SiliconStudio/YEBIS-plugins - GitHub
https://github.com/SiliconStudio/YEBIS-plugins  トップは英語で書かれてますが、実は日本語のドキュメントしか今は無いです</description>
    </item>
    
    <item>
      <title>[Windows10] PCのGPUを確認する</title>
      <link>https://h-sao.com/blog/2016/07/26/check-gpu-on-pc/</link>
      <pubDate>Tue, 26 Jul 2016 21:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2016/07/26/check-gpu-on-pc/</guid>
      <description>PCのGPU、つまりグラフィックボードってなんだろな？と思った時の操作メモです
対象は Windows10
(1) まず Windows10 のディスプレイ画面を表示させます
 デスクトップ画面を右クリック
＞ディスプレイ設定
 もしくは
 Windowsのスタートボタン
＞設定
＞システム
 (2) 「ディスプレイの詳細設定」を選択！
(3) ディスプレイのカスタマイズの項目の中の、「アダプターのプロパティの表示」を選択！
(4) グラフィックボードの情報が出てきます
このPCはインテルボードでした
別の調べ方としては、DirectX 診断ツール（dxdiag）を使う方法もあり
dxdiag で検索すると、一致するコマンドが出てきます
実行すると、こんな感じで、表示を出してくれます
GPU…気になりますよね…
CPUは多少型が古くても、それほど差が出ないけど
GPUだけは新しい型のものにしとかないと…とかとか
私的にはこだわりたいのです！！！
（実行出来てるかどうかは…涙）</description>
    </item>
    
    <item>
      <title>[GitHub] GitHubリポジトリを別アカウントに移動させる</title>
      <link>https://h-sao.com/blog/2016/07/20/transfer-github-repository/</link>
      <pubDate>Wed, 20 Jul 2016 20:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2016/07/20/transfer-github-repository/</guid>
      <description>旧 Github Micro Plan では、プライベートリポジトリは5つまでしか持てませんでしたが
最近は Presonal Plan に変更されて、リポジトリ制限数が無制限になりましたね
 GitHub価格ページ
https://github.com/pricing  それを受けて、手元で持っている複数の Micro Plan アカウントを、一つのアカウントにまとめる作業を行いました
あるGithubのリポジトリを別アカウントに移管する、という意味になります
 移動元個人アカウント(XXX)のリポジトリ(X-REPO)
↓
移動先個人アカウント(YYY)
 ドキドキしたけど、結構すんなり出来たので、別にドキドキする必要なかった(^^;)
とはいえ、わたしの様な小心者が、他にもいらっしゃるかもしれないので
（あと、忘れた頃の未来の自分のため^^;）
手順を詳細に載せときます
GiuHub上での操作(移動元)  移動元(XXX)のアカウントで GitHub にログインします
 移動元(XXX)のGitHubのリポジトリ(X-REPO)の Settings＞ Options に行きます
 一番下に Denger Zone があるので、そこの Transfer をクリックして、移動させます
（まだ、いきなりは移動しないよ）
 移動元(XXX)のリポジトリ名(X-REPO)、移動先のアカウント名(YYY) を入力します
これで、リポジトリを移動させる準備が出来ました
 移動元リポジトリ(X-REPO)は、移動先アカウント(YYY)の許可待ち状態になります
この状態であれば、Abort transferを押して、まだ移管を取り消すことが出来ますね！
  その後、移動先アカウント(YYY)にメールが届く  こんなメールが移動先アカウント(YYY)に届きます  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  ＜タイトル＞ [GitHub] Repository transfer from @XXX (XXX/X-REPO) ＜内容＞ Hello YYY, @XXX wants to transfer the XXX/X-REPO repository to YYY/X-REPO.</description>
    </item>
    
    <item>
      <title>[English] Study Hacker English Companyに通ったら英語苦手じゃなくなったよ</title>
      <link>https://h-sao.com/blog/2016/07/19/english-study-hucker/</link>
      <pubDate>Tue, 19 Jul 2016 23:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2016/07/19/english-study-hucker/</guid>
      <description>なんか、ポストが長くなったので、最初にまとめを書いておきます
英語がめっちゃ嫌いだったんだけど、英語学習を自主的に継続して出来るようになったよ！というメモ書きです
TOEICの得点が上がったとか、ペラペラ話せるようになったという内容じゃないです
 日本だけで過ごしている根っからの日本人にとって、英語がコンプレックスになっている人も多いと思います
わたしは英語がぜんぜん出来ないです…
受験でも嫌々ながら勉強したし＞＜
なぜこんなに英語が嫌いなのか判りませんが、まぁとにかく嫌いでした
ところが、IT業界に携わっていると、嫌でも英語に接する機会があるわけですね…
そもそも情報源は英語しかないとか、普通だし…
そしてなんと、ここ1年のわたしの同僚は、全員が海外メンバーという驚異の環境なので、意思疎通を図るのも English only なわけです
意思疎通どころか、会議も全て英語なので、はっきりいって、
ミーティングの詳細はまったくもって不明ですｗｗｗ
Programming の下地があるので、なんとか概要は判る程度ではありますが、詳細は…（涙）
それでも、
 英語学習そのものに非常に嫌悪感があったこと、
 さらに良くないのが、チームメンバがわたしの変なブロークンイングリッシュに慣れてしまい、 変な文章でも、会話できるようになったこと  が、さらにわたしの英語学習の意欲を遠ざけてしまいました…
別に勉強しなくても、まぁ会議の内容はそこそこ聞こえてきたし、
変な英語でも、会話しようと思ったら何とかなるものね…（ま、いっか）
みたいな感じで、１年間が過ぎてしまいました
で、これ↑↑↑ではさすがに、あかんやろ…＼(^o^)／
ということで、一念発起しまして、有償の英語トレーニングに申し込みました（もちろん自費）
そこでの英語の先生との出会いで、
今では、わたしの英語学習が、なんと自主的に続くようになったのです！！！
そのへんの経緯を、ちょっと書き出してみたいと思います
英語が必要な環境でも、勉強はしない アメリカ/カナダネイティブは、もうそれはそれは素晴らしい発音とナチュラルな言い回しをお持ちで、あぁ、あなたたちのその生まれ持った言語能力…天からのたまものですね…
何をどうあがいても、英語のネイティブに、わたしはなれないわけでございます
余談ですが、わたしの周りにはシリコンバレーや大手海外メーカーで働いた経験の人も結構いてて、
彼ら曰く、プロジェクトリーダーの募集条件に「英語ネイティブであること」が、書かれているものもあるらしいです
 もうこの時点で、英語利用者の20％くらいしか対象が居ないらしく…ボスが言ってました…厳しい～＞＜。
もちろん、そんなプロジェクトばかりじゃないみたいですけど、
トップオブトップになるには努力だけでは越えられない壁があるようでした
 ヨーロッパ系の人は、文法や文字の成り立ちが英語に近いこともあり、日本人ほど苦労せずとも身に着けられるらしいです
「TOEICなんてちゃらいよー990点取れるにきまってるよー」
とか、同僚は言ってますが（ええ、そうですか、それはすごいですね、うらやましいですよ。でももちろん、あんたのその日本語の使い方ははちょっとおかしいんですけど、それはさておき）
ぺらぺらとみなさん第２外国語である英語をしゃべってるわけです
くそ、、バカにしおって。。。（たぶん誰もバカにしてない）
いまに見とけよ(￣д￣) （完全に遠吠え）
しかし、思いに反して、わたしの英語学習は一向に進まないのでした…
単語本、文法本が、完全な積ん読本になる毎日…（つまりまったく読んでない）
英語が必要な環境でも、英語を学習しなくても、何とかなってしまうのです！！！
英語が必要な環境だったらなぁ～勉強するのになぁ～なんて言ってるそこのあなた！！！
たぶん、必要な環境になっても、勉強しないです
日本の教育レベルは、なんのかんのといって高いみたいで
中学レベルの英語が判れば、あとは気合で何とかなってしまうのです…
 中国に行ったとき、タクシーのおっちゃんが全く英語が話せなくて
(わたしのつたない英語)⇔（おっちゃんの中国語）
とかで、まじで焦りました…
しかし！？会話というのは、判らなくても何とかなってしまうものなのです…！ちゃんと行きたい場所まで行けました
 現に、何年も日本に暮らしている海外の方でも、日本語が話せない人も、うちの会社には居てます
日本語判らないのに、どうやって日々生活してるんだろ…と思いますが、それでも何年も過ごせているのです
そもそも日本人向けの外部ツールが充実している 1年経ったら、英語がもうちょっと上手くなってるかなー？ふんふんふーん♪</description>
    </item>
    
    <item>
      <title>[Windows10] シャットダウンができない対策</title>
      <link>https://h-sao.com/blog/2016/06/15/recommend-uncheck-fast-startup-for-windows10/</link>
      <pubDate>Wed, 15 Jun 2016 12:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2016/06/15/recommend-uncheck-fast-startup-for-windows10/</guid>
      <description>Windows10 でシャットダウンが出来ない現象にあった方はいらっしゃいますか～？
わたしもそんな一人でした……(^_^;)
シャットダウンを選択しても、勝手に再起動するんです…　やめてぇ～(つд⊂)ｴｰﾝ
実はこれ、「高速スタートアップ」の設定が効いているときになるPCがあるようです
※会社のインフラ詳しい方に教えて頂きました！
 コントロールパネル
&amp;gt; システムとセキュリティ
&amp;gt; 電源オプション
&amp;gt; 電源ボタンの動作の選択
&amp;gt; 現在利用可の出ない設定を変更します
&amp;gt; 高速スタートアップを有効にする
 今すぐ、「高速スタートアップを有効にする」のチェックボックスを外しましょう！
わたしの場合は、これで、無限再起動が無くなりました(●´ω｀●)
よかった。。。いつもバイオス画面になったのを見計らって、ブチギリしてたんですよ…( ；∀；)
シャットダウンが出来ない人の助けになればと思います！</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;] VisualStusio2015でClangを使う設定</title>
      <link>https://h-sao.com/blog/2016/05/15/use-clang-on-visualstudio/</link>
      <pubDate>Sun, 15 May 2016 23:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2016/05/15/use-clang-on-visualstudio/</guid>
      <description>今日は Clang with Microsoft CodeGen の設定などについて、メモしておきます
先人たちが既に色々と試している内容と対して変わりませんが、そもそも日本語の情報も少ないので、何かの足しになればと思います
&amp;ldquo;Clang with Microsoft CodeGen&amp;rdquo; is here! 最近はすっかり、クロスプラットフォームやオープンソースに力を入れているマイクロソフト社のツールセットの中に、Clang対応ってのがあります
2015年の年末にですが、Clang が正式に Visual Studio 2015 Update1 で利用できるよ～
とVC++チームブログで発表されていました
 Clang with Microsoft CodeGen in VS 2015 Update 1 - Visual C++ Team Blog
https://blogs.msdn.microsoft.com/vcblog/2015/12/04/clang-with-microsoft-codegen-in-vs-2015-update-1/
 Clang with Microsoft CodeGen (March 2016) released- Visual C++ Team Blog
https://blogs.msdn.microsoft.com/vcblog/2016/03/31/clang-with-microsoft-codegen-march-2016-released/
  良いですねー(^^)
現在のVS2015には Clang with Microsoft CodeGen というツールセットが提供されており、目玉はなんといっても、Clang のデバックを Visual Studioのエディターで確認できるところでしょうか！
他にも、Clang でコンパイルしたobjと VC でコンパイルしたobjがリンクできるところもすごいです
既存資産をフル活用出来そうですね
 （2016/5/15現在、Visual Studio 2015 Update2 が最新です）</description>
    </item>
    
    <item>
      <title>[SSH] 複数キー接続のconfig記載について</title>
      <link>https://h-sao.com/blog/2016/05/09/add-ssh-config-for-git/</link>
      <pubDate>Mon, 09 May 2016 23:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2016/05/09/add-ssh-config-for-git/</guid>
      <description>前回、
[Git] Gitで利用するsshキーペアの作成、ssh接続、複数ID接続
で Gitサーバにアクセスするための ssh 接続について記載しました
その追記メモです
.\.ssh\config ファイルに記載する内容 Git アクセス に ssh を利用する際に、複数アカウントを利用したい
つまり、複数 ssh キーを利用したい
という場合についてです
もし、利用するキーの名前が id_rsa であれば
これはデフォルトで認識される名前なので、わざわざ .\.ssh\config ファイルに記載しなくても接続OKでした
つまり例えば、
 元々 社内用 Git サーバのアクセスに id_rsa を利用していた 追加で、GitHub にアクセスするキー（github_rsa など別名称）を作成した  こんな場合があったとします
.\.ssh\config ファイルに記載する内容は 2. の github_rsa のものだけでOKです
もちろん、 1. の id_rsa を書いても問題ないですし、コンフィグにちゃんと記載されている方が、後々判りやすいと思いますが
無理に config に追記しなくてもわたしの環境では問題なく接続できました
参考までに～(^^)/</description>
    </item>
    
    <item>
      <title>[Unity] PC実行時のWindowsサイズの設定の仕方＆起動時フック</title>
      <link>https://h-sao.com/blog/2016/05/08/change-unity-window-size/</link>
      <pubDate>Sun, 08 May 2016 14:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2016/05/08/change-unity-window-size/</guid>
      <description>Unityのバグなのか、わたしの使い方が悪いのか？
PC実行時のウィンドウサイズの設定が、思うようにできなかったので
その解決メモです
PCで実行したら全画面… Unityのプロジェクトファイルを新規作成して
 &amp;ldquo;File&amp;rdquo; → &amp;ldquo;Build &amp;amp; Run&amp;rdquo;
 を選択すると、ビルドが走り、実際に exe が実行されます
へぇ、画面解像度( Screen resolution )とか、ここで変えることが出来るんだ～
と思って解像度設定を変更し、&amp;rdquo;Play!&amp;rdquo; で起動させると、いちおう思ったサイズで起動することが出来ます
Unityプロジェクトに Plyaer Settings がある ユーザに毎回ウィンドウサイズを選択させるのも、なんだかねぇ…ということで、ちゃんと設定したいと思います
Unityのメニューの
 &amp;ldquo;File&amp;rdquo; → &amp;ldquo;Build Settings&amp;rdquo;
 Build Settings を選択すると、ビルドに関する設定が変更できるようです
下にある、&amp;rdquo;Player Settings&amp;rdquo; を選択すると、 インスペクタウィンドウが出ます
ここで、起動時の Player Settings が出来るようですが…
「Resolution」 の 「Default Is Full Screen」 のチェックボックスを外しましょう
ついでに、「Standalone Player Options」 の 「Display Resolution Dialog」 を　「Disable」　にしておきます
これで exe を実行するたびに 「FixSizeWindows Configuration」 は開かなくなります
「Resolution」 には、「Default Screen Width/Height」 がありますが、、、</description>
    </item>
    
    <item>
      <title>[Git] Gitで利用するsshキーペアの作成、ssh接続、複数ID接続</title>
      <link>https://h-sao.com/blog/2016/05/07/generate-ssh-key-for-github/</link>
      <pubDate>Sat, 07 May 2016 15:23:30 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2016/05/07/generate-ssh-key-for-github/</guid>
      <description>しょっちゅう作っては、作り方を忘れ、また検索で調べる…ということをしているので、sshキーの生成&amp;amp;接続について、忘れないようにメモしておきます
GitサーバへSSHキーを使って接続したい Gitサーバに接続するには、
 http ssh  この2種類の接続方法があるみたいです
Git接続用のクライアントアプリは、どっちで接続するか選択できるものもあるので
Sourcetreeなどを使っていると、あまり認識してない人もいるかもしれません
今回、こんなクライアント環境で試しました
 自端末：Windows10 x64 Gitサーバ：GitHub Gitクライアントアプリ：GitExtensions Gitアクセスには、複数アカウントを利用している  これを試そうと思ったモチベーションは、push のたびに IDとパスワードを毎回聞かれるのがやだ、だからキーペアを利用して ssh アクセスにするんだー
というところから始まってます
GitHub のIDとパスワードをスキップして、セキュアアクセスするのだ！という方の参考になればと思います！
 あと、番外編として、 非推奨ですが https アクセスでIDとパスワードを毎回聞かれないようにする方法も最後にメモしておきます
 キーの生成方法 ssh-keygen ここは普通に
公開鍵と秘密鍵を作ればいいだけなので、知ってる人に取ったら何をいまさら…になりますが、一応メモ
Gitがインストールされているなら ssh-keygen が使えますので、コマンドを打つだけ
(コマンドを打たなくても、Gitのクライアントアプリが勝手にやってくれる場合もあります)
GitBash などを起動します
コマンドはこちら
$ ssh-keygen -t rsa  基本的には、何か聞かれてもエンターで進めばOKです
デフォルトでは c:\Users\[ユーザ名]\.ssh\** 以下に秘密鍵（id_rsa）と公開鍵（id_rsa.pub）**のキーペアが作成されます
Windowsだとキーの保存位置は c:\Users\[ユーザ名]\.ssh\ にしないといけません
わたしは、Github用のキーだと判るように、名前を github_rsa として作成しました
（既に別の用途で id_rsa を使っているからです、つまり複数アカウントを利用しています）
実行結果はこれ↓↓↓
(SHA256以下の箇所は、適当に x で書き換えています) haruka.sao@MyPC MINGW64 ~ $ ssh-keygen -t rsa Generating public/private rsa key pair.</description>
    </item>
    
    <item>
      <title>[勉強会] ebisu_effective_modern.cpp vol.3やりますよ</title>
      <link>https://h-sao.com/blog/2016/03/27/information-ebisu-cpp-vol3/</link>
      <pubDate>Sun, 27 Mar 2016 20:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2016/03/27/information-ebisu-cpp-vol3/</guid>
      <description>ebisu_effective_modern.cppって？  
東京の恵比寿でC++について、みんなの意見を聞きながら本を読み進める勉強会を開いています
昔、大阪でC++の読書会を開催していたのですが、それが結構役に立って面白かったので、東京でも開催してみよう！と思い、始めてみました
 ebisu_effective_modern.cpp vol.3
2016/3/31 (木) 20:00-21:30 東京恵比寿
http://ebisu-effective-modern-cpp.connpass.com/event/29324/
 ちなみに大阪はこちらで絶賛開催中ですよ～！
大阪C++読書会
http://cpp-osaka.connpass.com/
  ネタが無いと勉強や会話もしずらいので、
「Effective Modern C ーC11/14プログラムを進化させる42項目」 を元に進めています
今回は、５章 右辺値参照、ムーブセマンティックス、完全転送 について…
前回の vol.2 では、基本的なムーブの動きを簡単に抑えた程度になったので、あまり深いところまでは進めませんでした
書籍の内容にぐいぐい追いつけるように頑張りますよ～
興味ある方はどうぞ、お気軽にお越しください(^^)/</description>
    </item>
    
    <item>
      <title>[Mac] Windows Bootcamp 時の PrintScreen</title>
      <link>https://h-sao.com/blog/2016/01/12/windows-printscreen-key-on-mac/</link>
      <pubDate>Tue, 12 Jan 2016 02:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2016/01/12/windows-printscreen-key-on-mac/</guid>
      <description>Windows on Mac の時の PrintScreen キーは？ Macの上で、BootCamp で Windows を動作させているときにはにゃんと！「Print Screen」キーがありません（そらそうだ）
当然なんですけど、いつもいつも検索しては忘れて…を繰り返すので、いい加減、覚える
    画面全体コピー アクティブウィンドウコピー     Windows Print Screen Alt + Print Screen   Windows on Mac Fn + Shift + F11 Fn + Shift + Option + F11   Mac Shft + Command + 3 Shft + Command + 4     （Mac の Shft + Command + 4　は、画面の範囲選択です）</description>
    </item>
    
    <item>
      <title>[Unity] 2D Spriteにシェーダーをかける</title>
      <link>https://h-sao.com/blog/2016/01/11/unity-shader-2dsprite/</link>
      <pubDate>Mon, 11 Jan 2016 18:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2016/01/11/unity-shader-2dsprite/</guid>
      <description>今年の初めに、「Game a Week」という開発手法がすごい！っと書きました
とりあえず、週に一度は成果物を公開する、の部分を真似してみようかなと
（やってみて気が付きましたが、実は1週間って、結構長いです）
今をトキメクGame Engine: Unity について、去年から触る機会があり、ポチポチとやっております
そしてこれは既知の情報ですが、先週は2Dスプライトにシンプルなグラデーションのシェーダーを適用してみました
やってみると判るのですが、Unity ではスプライトにシンプルシェーダーだけを適用しようと思っても出来なくて、
先に結論を書いておくと、スプライトとして扱う場合は必ず何かしらのテクスチャアセットが必要でした
そのメモと感想文になります
2016年1月11日現在、Unityのバージョンは 5.3.1 です
Unity のシェーダー言語：ShaderLab Unity のシェーダーは 「ShaderLab」 という Unity オリジナルのシェーダー言語で記載することになります
といっても HLSL のラッパーのような言語なので、Unity で使うときのお作法であり、Unity と シェーダーの仲介役の言語、と思って良いみたい
最小限の ShaderLab 最小限の ShaderLab の枠組みはこんな感じ
（これより削ると、エラーが出た）
// BG_shader.shader // 最小限の ShaderLab Shader &amp;quot;Custom/BG_shader&amp;quot; { SubShader { Pass {} } }  実際に、このカスタムシェーダーをマテリアルに適用するとこんな感じ
何もしないマテリアルを作ることが出来ました
シンプルなグラデーション 今回、ゲーム背景を単純なカラーグラデーションにしようと思ったので、そういうシンプルシェーダーを書いていきます
// BG_shader.shader // 黄色くグラデーションする Shader &amp;quot;Custom/BG_shader&amp;quot; { SubShader { Pass{ CGPROGRAM #pragma vertex vert #pragma fragment frag // VS2015のグラフィックデバックON #pragma enable_d3d11_debug_symbols struct VertexInput { float4 pos: POSITION; // 3D空間座標 float2 uv: TEXCOORD0; // テクスチャ座標 }; struct VertexOutput { float4 v: SV_POSITION; // 2D座標 float2 uv: TEXCOORD0; // テクスチャ座標 }; // 頂点 shader VertexOutput vert(VertexInput input) { VertexOutput output; output.</description>
    </item>
    
    <item>
      <title>[Utility] ISOファイルからBoot用USBを作成するアプリRufus</title>
      <link>https://h-sao.com/blog/2016/01/06/usb-boot-app-rufus/</link>
      <pubDate>Wed, 06 Jan 2016 01:50:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2016/01/06/usb-boot-app-rufus/</guid>
      <description>Windows10 の isoファイルからUBSインストールメディアを作りたいと思ったときに、便利なソフトを見つけました
実際は、「USB ブート 作成」などなどで検索すれば、やり方はいくらでも載ってるんですけど
省コストで、ぱぱっとやりたいことを実現してくれたので、紹介しておきます
 Rufus
http://rufus.akeo.ie/  このソフトを使ったら、簡単にUBSインストールメディアを作成出来ます
配布されているアプリはEXE単体のみ！
2016年1月6日現在、バージョンは　Rufus2.6 で、&amp;rdquo;rufus-2.6.exe&amp;rdquo; のみで動作します
シンプルで良いですね
利用した感じは以下のような雰囲気でした
 ISOイメージを選択
USBの元データ消しちゃうよーの警告
UBSインストールメディア作成中
 日本語にも対応しているし、お手軽でおススメです</description>
    </item>
    
    <item>
      <title>[Diary] 2016年もよろしくお願いします</title>
      <link>https://h-sao.com/blog/2016/01/04/hello2016/</link>
      <pubDate>Mon, 04 Jan 2016 16:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2016/01/04/hello2016/</guid>
      <description>遥佐保（はるか・さお）です
今年もよろしくお願いしますと共に、去年から気になっていることも踏まえて、記載しています
MSMVP 2016年1月度受賞 今年もマイクロソフトさまより MVP を再受賞させて頂きました
カテゴリー名称は Windows Development となります 昨年と変わらず、クライアントサイドの技術カテゴリーでの受賞となります
自分ひとりだけでは、とても活動は続けられませんでした
気さくに相談できる相手が、周りにたくさん居てくださるおかげです
プラス思考でこれからも色々な情報発信を行っていきたいと思います
コミュニティ活動 ブログ移転を機会に、自分の歴史ページを作りました
http://h-sao.com/about/
いやーよくわかりますね、自分の活動履歴が…ヽ(｀▽´)/
リンクなどまだ未記載のものがほどんどですけど、頃を見て更新していきます
去年はセッション6回、勉強会主催8回/スタッフ3回でした
環境が変わったこともあり、例年よりはちょっと少なかったかも
東京生活 あまり自身のことはこれまで書いてこなかったのですが、今年は活動場所を大阪から東京に移しました
慣れたような慣れないような？まぁそれでも元気にやっています
完全に私見ですが、文化の違いを一番痛感したのは食事でしょうか…
東京はどのお店も蕎麦と寿司が美味しい気がします
逆に他の和食系は、関西とちょっと料理法が違うようで、最初はかなり衝撃的でした(^^;)
あぁ、お好み焼き定食が懐かしい限りです(^^) 東京にはありません
 年越しそば、美味しかった(^ω^)  仕事が変わったので、出社時間が遅い環境になりました、朝弱いので、本当にアリガタイ…
グラフィック技術 元々コンシューマーゲームでエフェクトシステム全般（パーティクル、スプライト、フィルター系など）を担当していたので、そこでの知識が多少生かせるような形になりました
一番の衝撃は、Vulkanの低レイヤAPIを見て、まじ時代錯誤？いややわーこれ管理するのんーと(笑)
今まだ正式に情報は出ていませんが、このNVIDIAが出しているムービーはすごく判りやすくて、いい内容です
 NVIDIA SIGGRAPH 2015 Conference（英語、１時間あるよ）
https://www.youtube.com/watch?v=8xBuAdnIrJQ  Metalにしろ、これにしろ
ひとつのゲームチームで対応できる範囲を超えてる感じはあります(^^;)
インディゲーム開発者 去年はインディゲーマーの方々と知り合えたのは本当に自分にとってラッキーでした
彼らと話をしていたら、やりたいことは何なのか？→ゲーム作りに専念したい
といった、物事の真の部分（みたいなもの）を、純粋に考えられるようになりました
そこには、製品も開発言語もただの道具で、本当にやりたいことがあるなら能力は後から付いてくる
という、ごく自然で純粋な情熱が溢れていました
中でも、「Game a Week」という開発手法は衝撃的です
知ってましたか？1週間に1本、ゲームを作るのです
どんなにクソゲーでも、作る期間は1週間
そしてそれを公開すべしと
言い出したのは Rami Ismailさんらしいです、カッコいいよ…
 Game A Week: Getting Experienced At Failure</description>
    </item>
    
    <item>
      <title>[Hugo] ブログ構築メモ(2)-テンプレートの更新方法（CSSはメインではない）</title>
      <link>https://h-sao.com/blog/2015/12/13/change-theme-to-minimalist/</link>
      <pubDate>Sun, 13 Dec 2015 23:30:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2015/12/13/change-theme-to-minimalist/</guid>
      <description>前回、スタティックジェネレーターのHugoを使って、GitHub Pages にブログを展開する方法を記載しました
 [Hugo]ブログ構築メモ(1)-Hugoとテンプレート
http://h-sao.com/blog/2015/09/09/HugoAndTheme/  このとき、「デザインと機能を諦めた」と書きましたが
その続きをひそかにポチポチとやっておりました…
しかし、ポチポチやる日々が辛くなり、ついにはブログ更新そのものが怠ることに…
一向に進まない理由 一人ではWebのフロントエンドのノウハウもなく、もう無理かもーと思っていたことを
@mayuki さんに相談したところ、こんなアドバイスを頂きました
  CSSってイマドキ、モバイル対応などで複雑なので、デザインを一から自分で書き起こすのは辞めた方がいい
いつまでたっても、モノが出来上がらない
&amp;ldquo;CSSデザイン&amp;rdquo; を触るのは最後
先に &amp;ldquo;テンプレート&amp;rdquo; を駆使して、自分なりの配置にするのがおススメ
  つまり
機能のテンプレートは他から持ってこれるがデザインはあらかじめ好みのものを選ぶ方が良い
というアドバイスでした
あれ？前回わたしが書いた時には、
  結局はデザインよりも機能が一番多いのがいいんでない？という発想で選びました
  おお、まったく逆ですね…
デザインさておき、機能重視してたので、うまくいかなかったのか…！！！
好みっぽく、かつシンプルなテンプレート とまぁ、素人くさい話で本当に恐縮ですが、気持ち改め、シンプルで改変しやすそうなデザインのテンプレートを引っ張ってきました
 minimalist
https://github.com/digitalcraftsman/hugo-minimalist-theme/  これは相談したその場で@mayuki さんが、ちゃちゃっとテストするために触ってくれたテンプレートです
彼はものの10分程度で、わたしのやりたいことを目の前でやってくれたので、とても参考になりました
ありがとうございます～（涙目）
最初に見る場所はHTMLテンプレート やったことはまず、themes &amp;gt; minimalist &amp;gt; layouts の下を見るようにしました
わたしの環境だと C:\Users\haruk\Dropbox\sites\Blog\themes\minimalist\layouts になります
ここから必要そうな機能の、HTMLテンプレートを作っていきます
わたしの場合、以下の機能（テンプレートとなるブロックと名付けます）が不足していました
 ヘッダーに &amp;ldquo;About me&amp;rdquo; などのリンクをつけたい 最新ポストの表示 タグ表示  こんな感じです
ヘッダーに直接何か書いてみる themes &amp;gt; minimalist &amp;gt; layouts &amp;gt; partials &amp;gt; header.</description>
    </item>
    
    <item>
      <title>[勉強会] meetup app@1 でオープンソースについて発表しました</title>
      <link>https://h-sao.com/blog/2015/11/21/meetup-app1-opensource/</link>
      <pubDate>Sat, 21 Nov 2015 16:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2015/11/21/meetup-app1-opensource/</guid>
      <description>2015/11/21 Sat meetup app@1 という勉強会を開催しました
https://meetupapp.doorkeeper.jp/events/33820
 ビジネスにおけるオープンソースの利用価値
https://speakerdeck.com/harukasao/21-opensource-value   仰々しいタイトルが付いていますが、完全に私見まとめを発表させて頂きました
オープンソースだけというよりは、最後の方は、普通に製品やサービスのロードマップ、ビジネスモデル的な観点になりました
もちろんこれが全てではないと思うし、わたしはマーケティングのプロでもないので間違っているかもしれないですけど</description>
    </item>
    
    <item>
      <title>[Android]Xiaomi Redmi Note2にGooglePlayをインストールする</title>
      <link>https://h-sao.com/blog/2015/10/06/install-googleplay-onxiaomi/</link>
      <pubDate>Tue, 06 Oct 2015 04:00:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2015/10/06/install-googleplay-onxiaomi/</guid>
      <description>クロスプラットフォームで開発していると、やはり最新の端末が欲しくなりますよね～
１年以内発売の iPhone と Windows Phone は持っているのですが
そろそろ新しい Android が欲しい～と思っていたので、買ってしまいました
シンガポール旅行に行った際に、ブギスの電気屋街、Sim Lim Square（シムリム スクウェア）で、今をトキメク Xiaomi（しゃおみ）デバイスを購入しました
 Xiaomi
http://www.mi.com/  全部で6Fまでありましたが、結局1Fのお店の品ぞろえが一番まとまってる印象でした
Xiaomi正規店も1Fに入っていました
Xiaomi Redmi Note 2 購入したのは、Xiaomi Redmi Note 2
     画像のように、デフォルトでは中国語のアプリがたくさん入っています
そして、Google Play Store は入っていません！
デフォルトのIMEが Buidu なので、まぁこのままでは、日本語が打てません(&amp;gt;&amp;lt;;)
なので Google Play Store をインストールする方法をメモしておきます
GooglePlay installer APKが最適解 検索すると色々な方法が出てくるのですが、おそらく、Google installer のAPKを直接インストールするのが、手っ取り早いです
（チャイナストアやMIストアからGooglePlayらしきものをインストールしても、わたしの場合は、動作しませんでした）
情報元はこちらの Xiaomi公式コミュニティ掲示板です
 [System Tools] Find all the Google Apps in Google installer!　http://en.miui.com/thread-3998-1-1.html  Xiaomiはすごくコミュニティも発達してるんですよね～ちゃんと英語の掲示板なので、読めました(^_^)</description>
    </item>
    
    <item>
      <title>[Hugo]ブログ構築メモ(1)-Hugoとテンプレート</title>
      <link>https://h-sao.com/blog/2015/09/09/hugoandtheme/</link>
      <pubDate>Wed, 09 Sep 2015 01:11:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2015/09/09/hugoandtheme/</guid>
      <description>Windows10のノートPCに Hugo というスタティックジェネレーターをインストールして、このブログを構築しています
作ったブログは、GitHub Pages にアップして運用しています
今のところ気に入っているのは
  ブログの管理が GitHubで行えること ブログ用の運用サーバーが不要なこと (ありがとう！GitHub) GitHubにPushしたら、werckerの自動ビルドでGitHubPagesにアップすること   この3点かなー
今日は上から2番目までのブログ構築部分（つまりHugoの部分）をメモしておきます
インストール (というか単なるexeファイル設置)  最新バージョン取得
https://github.com/spf13/hugo/releases  わたしが 2015/9/9 現在ダウンロードしたバージョンは v0.14 です
Hugoはexeだけで動くので、適当なディレクトリに置きます
わたしは
C:\Library\Hugo\bin\hugo.exe  に設置することにしました
ブログ新規作成 Windows標準のコマンドプロンプトで作業します
このとき既に、ブログを作ろうとするディレクトリが存在していたら、ブログ作成は失敗するので、気を付けてください
 FATAL: 2015/09/09 C:\Users\haruk\Dropbox\sites\Blog already exists and is not empty
 リネームなどして、再チャレンジ
うまくいくと、何の反応もなく終わります
C:\Users\haruk\Dropbox\sites&amp;gt;c:\Library\Hugo\bin\hugo.exe new site Blog C:\Users\haruk\Dropbox\sites&amp;gt;  ディレクトリ構造の確認
C:\Users\haruk\Dropbox\sites&amp;gt;cd Blog C:\Users\haruk\Dropbox\sites\Blog&amp;gt;dir ドライブ C のボリューム ラベルは MyWindows です ボリューム シリアル番号は xxxx-xxxx です C:\Users\haruk\Dropbox\sites\Blog のディレクトリ 2015/09/09 20:29&amp;lt;DIR&amp;gt; .</description>
    </item>
    
    <item>
      <title>[Hugo/wercker]ブログを移行しました</title>
      <link>https://h-sao.com/blog/2015/08/25/moving-blog/</link>
      <pubDate>Tue, 25 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://h-sao.com/blog/2015/08/25/moving-blog/</guid>
      <description>ライブドアで書いていたブログ 「遥佐保の技術メモ」 http://blog.livedoor.jp/haruka_sao/ を移植することにしました
思えばライブドアはソースコードを表示するのには適していないブログでした…
2008年からなので、もう7年も!?
かなり気づくのが遅かったですね…
 Hugo - https://gohugo.io/  もともと、Sao`s Closed Circle というGitHub Pages の練習用のブログを JekyllBootstrap で作っていました
今回からは、ツールも新たに Hugo を使うようにしました
書くほどのお知らせじゃないですが、このブログはHugoという静的サイトジェネレーターで作っています、静的、つまりただのHTMLです
自前運用です
ここ5年くらい前？から流行っているらしいです
最近は技術系以外でもよく使われているらしいです
どのジェネレーターが良いかと言うのは、よくわからないですけど
Jekyll（Rubyベース）が有名なのかなーと思います
Static Site Generators まとめによるとJekyllはGithubスター数がトップですね
（Static Site Generatorsは、ちまたの静的サイトジネェレータ一覧です）
https://staticsitegenerators.net/
こうしてみると、Hugoは後発ながら結構人気みたい
Jekyllはとても高機能で（イイコトなんですけど）
でもわたし、Rubyがよくわからなくて（すまん…Web屋さんじゃないの…）
そんなときにGoで作られた、ちょっぱや生成のHugoを知ってしまったら、もうJekyllには戻れなくなりました、haha&amp;hellip;
Jekyllの方が事例も多いし、検索ですぐ解決できるけど、ちょっとジェネレートの時間がかかるのが弱点かも
たいして記事数のないわたしでもそう思いましたから、記事数の多い人に取ったらちょっとイライラの原因だったかもしれませんね
Hugoは、機能あれもない、これもないの、(ヾﾉ･∀･`)ﾅｲﾅｲずくし
けどそこが良い！シンプルで良いんです！(_≧Д≦)ﾉ彡☆
 wercker - http://wercker.com/  さらに、生成するだけでなく、CIサービスである wercker を使って、GitHubにプッシュしたら自動でデプロイするという仕組みにしました
これを構築したメモもおいおい記載していくつもりです
（そうしないと自分が忘れてしまう…）
このブログ自体もまだまだ作り中で、色々と足りてない機能が多いのですが、勉強しながら追加していこうと思います
過去ブログの情報移植もこれからです
（RSSが変に更新されるかもしれません）
気持ちも新たに、役立つ情報を発信していければと思っています！
またよろしくお願いしまーす！</description>
    </item>
    
    <item>
      <title>[Mac] Homebrewインストールログ</title>
      <link>https://h-sao.com/blog/2015/05/11/install-log-for-homebrew/</link>
      <pubDate>Mon, 11 May 2015 03:05:44 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2015/05/11/install-log-for-homebrew/</guid>
      <description>以下の方法は 2019年現在では古くなってますので、新しいインストールログはこっちの記事を参考にしてください！
 [macOS] Homebrewインストールログ2019版 - Effectiveさお
http://h-sao.com/blog/2019/05/30/how-to-install-homebrew-on-macos-2019/  Homebrew とは、Mac上のアプリケーションパッケージを管理するソフトです
詳しくはこちら↓↓↓に書かれているのですが、自分のメモとログを残します
 MacにHomebrewをインストールする - Qiita
http://qiita.com/is0me/items/475fdbc4d770534f9ef1
 Homebrewの本家
http://brew.sh/
  Macでのインストールログ
## Homebrew入ってない状態 MacProSao:~ Sao$ brew -bash: brew: command not found ## VIMでバッシュプロファイル作成 MacProSao:~ Sao$ vim .bash_profile MacProSao:~ Sao$ more .bash_profile export PATH=/usr/local:$PATH MacProSao:~ Sao$ pwd /Users/Sao ## /usr/local の作成 MacProSao:usr Sao$ sudo mkdir /usr/local/ WARNING: Improper use of the sudo command could lead to data loss or the deletion of important system files.</description>
    </item>
    
    <item>
      <title>[PMP] PMPロゴのダウンロード場所</title>
      <link>https://h-sao.com/blog/2015/04/13/download-pmp-logo/</link>
      <pubDate>Mon, 13 Apr 2015 22:30:04 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2015/04/13/download-pmp-logo/</guid>
      <description>何かと探したけど、全く判らなかった…
「PMP ロゴ ダウンロード」で検索に引っかかる情報が、個人的に理解できなかった
古いのか、単にわたしのITリテラシーが低いだけなのか…
PMIサイトの中にあります
Certifications
&amp;gt;Certification Program
&amp;gt;左の MyPMP
&amp;gt; PMP Logo
ここからダウンロードできます
Certifications のページって、思いつかなかったですよ…(&amp;gt;o&amp;lt;&amp;ldquo;)
ちなみに、追い打ちをかけるように、Chrome で JPGをダウンロードがうまく出来なかった
※ PMP_Business_Card_Logo.ashx　って……（＞＜）
IEだと、JPGロゴがダウンロード出来ましたよ&amp;nbsp;</description>
    </item>
    
    <item>
      <title>[Android] 開発者向けオプション表示とAPKインストールコマンド</title>
      <link>https://h-sao.com/blog/2015/03/13/install-android-apk/</link>
      <pubDate>Fri, 13 Mar 2015 22:00:51 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2015/03/13/install-android-apk/</guid>
      <description>ずいぶん昔から出ている情報ですが、メモっときます
Android端末に自作アプリを入れるシンプルな方法です
Android端末での準備 Android4.2以降の端末だと「開発者向けオプション」が非表示になってるので
USBデバッグを有効にしたい場合は
端末情報&amp;nbsp;＞ ビルド番号
このビルド番号を7回クリックしたら、「開発者向けオプション」が表示されます
やっておくことは
設定 ＞ セキュリティ ＞ 提供元不明のアプリ　ON設定 ＞ 開発者向けオプション ＞ USBデバッグ　ONデバイスを提供している会社のサイトから、Android用SDKドライバをインストールするこんなところでOK
（参考）
USBデバッグを有効にする、提供元不明アプリのインストールを許可する - Yahoo!スマホマネージャーヘルプ&amp;nbsp;
Android端末にAPKをインストール AndroidSDKをインストールした場所に adb tool が入っています
わたしの場合は&amp;nbsp;C:\Library\android-sdk にインストールしたので、adb.exe は
 C:\Library\android-sdk\platform-tools\adb.exe
 よく他のサイトで、PCの環境変数パスに、C:\Library\android-sdk\platform-tools を追加設定する、というのを見かけますが
単にこの abd.exe を使うだけであれば、環境変数への追加は必要ないです
UBSでAndroid端末をPCに接続した状態で
手元の MyApp.apk をインストールするコマンドはこちら
1  adb install -r MyApp.apk   さくっとインストールできました
デバイスからAPKリンクをつつくなどでも良いのですが
開発者っぽい感じかつ、
ちょっと手元でAPKを試したい時の参考までに(^^)/</description>
    </item>
    
    <item>
      <title>[GitExtensions] 行単位で変更をリセットするRコマンド</title>
      <link>https://h-sao.com/blog/2015/03/03/reset-line-to-gitextensions/</link>
      <pubDate>Tue, 03 Mar 2015 22:00:28 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2015/03/03/reset-line-to-gitextensions/</guid>
      <description>GitExtensions を使ってみました
 http://gitextensions.github.io/  GitExtensions では、commit 時に、行を選択して
その選択部分だけをリセットする（コミット前に合わせる）という機能があります
 Commit - Git Extensions 2.48 documentation
http://git-extensions-documentation.readthedocs.org/en/latest/commit.html  以下↓↓↓のような適当なファイルがコミットされていたとします
ファイルの下に、変更を追加してみました
Giet Extensionsを見ると、ファイルが変更されたので、Commit(1) になっています
差分は、以下のような感じ
追加した 「20」、 「100&amp;hellip;」 の数字が、緑色の変更分として表れていますね
実は、これは作成中のプログラムなどで、
「100&amp;hellip;」 の部分は、Commit には不要だったとします
そこで、以下のように、Commit には不要だなと思った部分を選択して [R] キーを押してみます
以下↓↓↓のような感じで、ここの行消してもいいの？と聞いてくれます
「はい」にすると、元のファイルから、選択した行を削除してくれます
この動作は、Commitした/しないに関わらず、元ファイルに反映されます
「はい」を押したあとのファイルの状態↓↓↓
あぁーあそこ、削除しとかなきゃ。。。
というときに、元ファイルに戻ってから、再度コミットする、
という手間が省けます
便利やね(^^)/</description>
    </item>
    
    <item>
      <title>[勉強会]2015 MVP Community Camp～大阪～「クロスプラットフォーム開発 の紹介」</title>
      <link>https://h-sao.com/blog/2015/01/31/presentation-mvp-comunity-camp-osaka2015/</link>
      <pubDate>Sat, 31 Jan 2015 17:38:14 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2015/01/31/presentation-mvp-comunity-camp-osaka2015/</guid>
      <description>2015/1/31 に 2015 MVP Community Camp～大阪～ というイベントが開催されました
http://connpass.com/event/10478/
そちらで一枠セッションをさせていただきました
 実際には指摘通り、あまりクロスプラットフォームの話は入ってなくて申し訳ないです
ちなみに 2015/1/31 現在、Visual Studio 2015 はまだCPTなので
この資料に記載している情報は未確定、未実装ですが
mobile first and cloud first の思想は
Satya Nadilla からのメッセージということで
受け取っていただければと思います</description>
    </item>
    
    <item>
      <title>[MSMVP] 2015年1月度Windows Platform Development再受賞しました</title>
      <link>https://h-sao.com/blog/2015/01/02/hello2015/</link>
      <pubDate>Fri, 02 Jan 2015 01:01:26 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2015/01/02/hello2015/</guid>
      <description>遥佐保（はるか・さお）です
今年もマイクロソフトさまより MVP を受賞させて頂きました
カテゴリー名称は Windows Platform Development となります
昨年と変わらず、クライアントサイドの技術カテゴリーでの受賞となります
クライアントサイドというのは、わたしの解釈では、PCやモバイル端末に関する技術のことを指します
わたしは特に、Windows Runtime について、知的好奇心を満たすための試みを去年はたくさん行いました
これはサーバ、クラウドとはちょっとジャンルが違いますね
また、開発言語やアプリケーションのジャンルとも少し違いますね
そしてこの、マイクロソフトMVPとは、何かしらの形で技術コミュニティに貢献した結果、マイクロソフト社がアワードとして個人を表彰する制度のようです
マイクロソフトの技術に中立的もしくは否定的な方にとったら
お前だから何なんだよって思う方も多くいらっしゃると思います
去年は非常にそれを多く感じた１年でもありました
たぶんピュアなC++について、例年よりも、たくさん勉強したからですね(*´ω｀)
OSS的な発想の方との関わりも例年に比べて多かったです
マイクロソフトの好意的なコミュニティの輪から外れた体感も多く出来ました
そこでは、勉強しようという姿勢が自分の中にあったら
自分自身のメインが何であれ、全否定はされないということがよく判りました
助けてくれる人も多くて、本当に本当に、沢山の人に助けられました
お礼を自分のブログに書くなんて、とてもおこがましい行為なのですが、本当にありがとうございました
MSマンセーのわたくしが記載するのも全くもってナンセンスではありますが
今年も何かを維持し続けることが出来たというのは、自分でもまーよくやったんじゃないかと思います…
自信をもって、謙虚を忘れず、これからも日々精進してゆきたいと思います
これも、周りの方々のおかげです
重ねてですが、本当にありがとうございました
2015年もよろしくお願いします！</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;11] 参考リンク情報</title>
      <link>https://h-sao.com/blog/2014/12/19/cpp11-link-note/</link>
      <pubDate>Fri, 19 Dec 2014 12:30:41 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2014/12/19/cpp11-link-note/</guid>
      <description>C++11について調べているときに参考になった情報源のメモ
 C++11/14/17 Features In VS 2015 Preview - Visual C++ Team Blog
http://blogs.msdn.com/b/vcblog/archive/2014/11/17/c-11-14-17-features-in-vs-2015-preview.aspx  VS2013とVS2015 previewで利用できる機能一覧が乗っている
 C++11 - the new ISO C++ standard　（和訳版）
http://　www32.ocn.ne.jp/~ons/text/CPP0xFAQ.html.ja (現在リンク切れ)
ビャーネさんのC++11に対するコメント
原文はこちら→http://www.stroustrup.com/C++11FAQ.html
 C++11 の機能 (Modern C++) のサポート
http://msdn.microsoft.com/ja-jp/library/hh567368.aspx
VC++でのC++11の機能一覧
  </description>
    </item>
    
    <item>
      <title>[勉強会] Introducing Windows Runtime：Hokuriku.NETvol.15の資料公開しました</title>
      <link>https://h-sao.com/blog/2014/08/31/hokuriku-net-vol-15-introducing-windows-runtime/</link>
      <pubDate>Sun, 31 Aug 2014 12:35:04 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2014/08/31/hokuriku-net-vol-15-introducing-windows-runtime/</guid>
      <description>北陸にお邪魔しました！
Hokuriku.NET vol.15
http://hokurikunet.doorkeeper.jp/events/13746
その際にお話させて頂いた資料を公開します
 Introducing Windows Runtime   発表資料 pptx版 (こちらは欄外に私的メモが残っています)
http://jyurimaru.info/data/20140830Hokurikunet15/201400830_Introducing_Windows_Runtime_pub.pptx
自分が調べてきたWindows Runtimeについての導入セッションとしては
これが最後になるかなー
さてさて、福井に行ったわけですが、お蕎麦がとても美味しかったです(~o~)
去年もお邪魔させて頂きましたが、今年もみなさま暖かく迎えて下さって
とても楽しかったです(^^)/</description>
    </item>
    
    <item>
      <title>[PowerShell] ファイル分割スクリプト</title>
      <link>https://h-sao.com/blog/2014/07/17/divide-file-using-powershell/</link>
      <pubDate>Thu, 17 Jul 2014 21:57:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2014/07/17/divide-file-using-powershell/</guid>
      <description>大きなファイルを分割する必要があって
めっちゃ困りましたけど、また PowerShell で解決しました
なかばやけくそ
＜sep.ps1＞
1 2 3 4 5 6 7 8 9 10 11 12 13 14  $my_path_name = &amp;#34;c:/tmp/&amp;#34; $my_file_name = &amp;#34;abc&amp;#34; $my_file_kind = &amp;#34;.log&amp;#34; $cut_num = 2000 # 切り取る行数  $my_file = $my_path_name + $my_file_name + $my_file_kind $count = 0; Get-Content $my_file -ReadCount $cut_num -Encoding UTF8 | ForEach-Object { $count ++ $cfs = &amp;#34;{0:D3}&amp;#34; -f $count; $_ &amp;gt; ($my_path_name+$my_file_name+&amp;#39;_&amp;#39;+$cfs+$my_file_kind) }   結果
あまり何も考えず、元ネタはこの方のブログですー</description>
    </item>
    
    <item>
      <title>[PowerShell] 連想配列をソートしてforeachで一個づつ取り出す</title>
      <link>https://h-sao.com/blog/2014/07/02/sort-arrays-and-retrieve-one-by-one-for-powershell/</link>
      <pubDate>Wed, 02 Jul 2014 17:46:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2014/07/02/sort-arrays-and-retrieve-one-by-one-for-powershell/</guid>
      <description>PowerShell で連想配列を用いた時のソート＆foreach のサンプルがなかなか探せなかったのでメモします
とある連想配列
PS C:\&amp;gt; $tbl = @{ &amp;gt;&amp;gt; k00 = &amp;quot;orange&amp;quot;; &amp;gt;&amp;gt; k01 = &amp;quot;peach&amp;quot;; &amp;gt;&amp;gt; k02 = &amp;quot;apple&amp;quot; &amp;gt;&amp;gt; }  出力は簡単
PS C:\&amp;gt; $tbl Name Value ---- ----- k01 peach k02 apple k00 orange  ソートの出力も簡単
PS C:\&amp;gt; $tbl.GetEnumerator() | Sort-Object Value Name Value ---- ----- k02 apple k00 orange k01 peach # もしくは PS C:\&amp;gt; $tbl.GetEnumerator() | sort Value Name Value ---- ----- k02 apple k00 orange k01 peach  これを一つづつ取り出して処理したい</description>
    </item>
    
    <item>
      <title>[PowerShell] 32bitと64bitの使い分け</title>
      <link>https://h-sao.com/blog/2014/04/19/about-powershell-x32-and-x64/</link>
      <pubDate>Sat, 19 Apr 2014 21:46:45 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2014/04/19/about-powershell-x32-and-x64/</guid>
      <description>PowerShellにはちゃんと 32bit版と 64bit版が備わっています
Windows2008 R2
Windows2012 R2
共に同じ場所にあります(~o~)
64bit版
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
32bit版
C:\Windows\SysWOW64\WindowsPowerShell\v1.0\powershell.exe
デフォルトの64bitマシンであれば、コンソールで
&amp;gt; powershell  とすると、64bitモードが立ち上がります
これはどういうことかというと、64bitのアプリから使うライブラリなどは、64bitでないとダメってことです
何にはまったかというと、PowerShell から System.Data.OracleClient に接続するとき
たとえDBサーバが 64bit Oracle だったとしても
Oracle Client はデフォルトでは 32bit になっているようです
powershell から oracle に接続しようとしたときこんな感じになります
# アセンブリのロード [void][System.Reflection.Assembly]::LoadWithPartialName(&amp;quot;System.Data.OracleClient&amp;quot;) # 接続 $conn_str = &amp;quot;Data Source=saoDB;User ID=sao;Password=password;Integrated Security=false;&amp;quot; $ora_conn = New-Object System.Data.OracleClient.OracleConnection($conn_str) # インスタンス $ora_cmd = New-Object System.Data.OracleClient.OracleCommand $ora_cmd.Connection = $ora_conn # データベースに接続 $ora_conn.Open()  （参考）powerShellからOracleを使う（接続・切断）
http://harikofu.blog.fc2.com/blog-entry-114.html
このDB接続直後に、64bit のPowerShell だと
こんなエラーが出ます
&amp;quot;0&amp;quot; 個の引数を指定して &amp;quot;Open&amp;quot; を呼び出し中に例外が発生しました: &amp;quot;Oracle クライアント ライブラリを読み込もうとしましたが、BadImageFormatException が発行されました。この問題は、32 ビットの Oracle クライアント コンポーネントが インストールされている環境で 64 ビット モードを実行すると発生します。&amp;quot; 発生場所 行:1 文字:22 + $ora_conn.</description>
    </item>
    
    <item>
      <title>[Oracle]テーブル・カラム名が不明でもDBに入っている値を検索したい</title>
      <link>https://h-sao.com/blog/2014/04/10/mining-for-value-from-db/</link>
      <pubDate>Thu, 10 Apr 2014 18:00:15 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2014/04/10/mining-for-value-from-db/</guid>
      <description>見知らぬデータベースを渡され、中を解析したい時…
ありますよね？ありますよね！？
全テーブルの全列に入っている値を横断検索したいという要求、あるんじゃないでしょうか？
探したら同じことを考えている人が居ました
 全テーブルの全列の値の検索方法について - Oracle Community
https://community.oracle.com/thread/2334738?tstart=0  方法は2種類
一つは dmp 出力して、テキスト検索 をするというもの
だいぶ力技ですけど、確かに、確実に検索できますね…
もう一つの方法は、PL/SQL で全データを総検索 するというもの
この方法、
やってみると、良い感じに動きます
お勧めです
テーブル名やカラム名が判らなくても、動きますしね！
めっちゃ感激したので、この記事にも SQL を載せておきます
このサンプルでは、全ての値に 「あ」 が入っているデータを検索します
どのテーブルの、どのカラムに、何件入っているかが判ります
う、嬉しい～!!!
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  declare sSQL VARCHAR2(128); sDATA VARCHAR2(500); type cursor_type is ref cursor; cur_search cursor_type; vCount INTEGER; ERR_CODE NUMBER := 0; ERR_MSG VARCHAR(255); begin for vRec in (select COLUMN_NAME,TABLE_NAME from USER_TAB_COLS where DATA_TYPE like &amp;#39;%CHAR%&amp;#39;) loop begin open cur_search for &amp;#39;select count(*) as cnt from &amp;#39; || vRec.</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;/CX] MVP Community Camp 2014大阪で「VC&#43;&#43;まわりの非同期処理」セッションしました</title>
      <link>https://h-sao.com/blog/2014/03/23/presentation-mvp-community-camp-osaka2014/</link>
      <pubDate>Sun, 23 Mar 2014 00:25:28 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2014/03/23/presentation-mvp-community-camp-osaka2014/</guid>
      <description>MVP Community Camp 2014大阪にて、VC++系のセッションをさせて頂きました
MVP Community Camp 2014大阪会場
http://atnd.org/event/E0024087 (リンク先は削除されている模様です)
当日利用した資料はこちら！
 
pptx版はこちら&amp;nbsp; ←セッション時の私的メモが欄外に載っています
PDF版はこちら
序盤はわたしの追体験発表みたいになってしまいました
同じような疑問を持っている人や、その人なりの解釈の手助けになる様であればと思って記載しています
後半部分は、VC++での非同期処理の触りだけになっていますが
非同期での例外や中断など、C++/CXのWIndowsストアアプリでは興味深い仕組みが色々あるので
この続きになる情報も、もっと自分なりに勉強して発信していきたいなー</description>
    </item>
    
    <item>
      <title>Anonymous Struct of C</title>
      <link>https://h-sao.com/blog/2014/02/24/c-anonymous-struct/</link>
      <pubDate>Mon, 24 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://h-sao.com/blog/2014/02/24/c-anonymous-struct/</guid>
      <description>Hi,
It is very tedious to think about the name of a struct when you use to struct only once.
In such a case, Anonymous structure comes in handy.
It is assigned to the anonymous struct
1 2 3 4 5 6 7 8 9 10 11 12 13 14  struct{ char 1st_name[0x80]; char 2nd_name[0x80]; } name_tbl[] = { { &amp;#34;Isami&amp;#34;, &amp;#34;Kondou&amp;#34; }, { &amp;#34;Toshizo&amp;#34;, &amp;#34;Hijikata&amp;#34; }, { &amp;#34;Kogorou&amp;#34;, &amp;#34;Kathura&amp;#34; }, }; for( i = 0; i &amp;lt; sizeof( name_tbl ); i ++ ){ printf( &amp;#34;%s\n&amp;#34;, name_tbl[ i ].</description>
    </item>
    
    <item>
      <title>[Git] ローカルを強制上書きして、作業をなかったことにしたい</title>
      <link>https://h-sao.com/blog/2014/02/03/force-reset-my-git-repository/</link>
      <pubDate>Mon, 03 Feb 2014 18:54:41 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2014/02/03/force-reset-my-git-repository/</guid>
      <description>ローカルの作業が何やらおかしくなったから
リモートのファイル内容に戻したい～という時
以下のコマンドでさくっと戻りました
1 2  git fetch origin git reset --hard origin/master    ツールなどで強制的にsyncさせようとしても
 failed to sync this branch
 という悲しいお知らせが出て、結局 Git Bash に行くことになりますので……
（参考リンク）
 gitでリモートのブランチにローカルを強制一致させたい時
http://qiita.com/ms2sato/items/72b48c1b1923beb1e186
 How to reset my local repository to be just like the remote repository HEAD
http://stackoverflow.com/questions/1628088/how-to-reset-my-local-repository-to-be-just-like-the-remote-repository-head
  </description>
    </item>
    
    <item>
      <title>C,C&#43;&#43;,C&#43;&#43;/CLI sample program</title>
      <link>https://h-sao.com/blog/2014/01/31/cpp-sample-program/</link>
      <pubDate>Fri, 31 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://h-sao.com/blog/2014/01/31/cpp-sample-program/</guid>
      <description>Hi,
C program 1 2 3 4 5 6 7 8  c00.c #include &amp;lt;stdio.h&amp;gt; int main() { printf(&amp;#34;This is a native C program.\n&amp;#34;); return 0; }    compile
&amp;gt; cl.exe c00.c  C++ program 1 2 3 4 5 6 7 8  c01.cpp #include &amp;lt;iostream&amp;gt; int main() { std::cout &amp;lt;&amp;lt; &amp;#34;This is a native C++ program.&amp;#34; &amp;lt;&amp;lt; std::endl; return 0; }    compile</description>
    </item>
    
    <item>
      <title>Lightning Talk:How to program C&#43;&#43;/CX</title>
      <link>https://h-sao.com/blog/2014/01/29/how-to-program-cppcx/</link>
      <pubDate>Wed, 29 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://h-sao.com/blog/2014/01/29/how-to-program-cppcx/</guid>
      <description>Hi,
The other day, I spoke about C++/CX in Lightning Talk.
Click here for article
PPTX-How to program c++/CX
PDF -How to program c++/CX
Take care!</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://h-sao.com/blog/2014/01/28/hello-world/</link>
      <pubDate>Tue, 28 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://h-sao.com/blog/2014/01/28/hello-world/</guid>
      <description>Hi,
I&amp;rsquo;m Sao Haruka :)
Japanese programmer
I have started this English blog since Jan 28, 2014.
Thank you.</description>
    </item>
    
    <item>
      <title>[Oracle] 直前のSQLを再実行する</title>
      <link>https://h-sao.com/blog/2014/01/18/rerun-last-sql/</link>
      <pubDate>Sat, 18 Jan 2014 00:53:07 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2014/01/18/rerun-last-sql/</guid>
      <description>OracleのコマンドラインでSQLを実行させるときのメモ
直前のSQLコマンドを実行は / (スラッシュ)
この場合、直前のバッファの内容は表示しません
1  SQL&amp;gt; /   直前のバッファの内容を表示して実行するのは run コマンド
1  SQL &amp;gt; run   直前のバッファの内容を修正するには edit コマンド
タイプミスなどを修正できます
ただし、環境変数 &amp;ldquo;_editor&amp;rdquo; にエディタの設定をしておく必要があります
1 2  SQL &amp;gt; define _editor=vi SQL &amp;gt; edit   （参考）
 OracleのSQL*Plusで直前に実行したSQLを再実行
http://margrave.seesaa.net/article/127477048.html
 SQL バッファの編集、エディタで編集する
http://www.shift-the-oracle.com/sqlplus/command/edit.html
 直前に実行したSQLをエディタで編集する
http://sakusakuit.blog.fc2.com/?m&amp;amp;no=15
  </description>
    </item>
    
    <item>
      <title>[C&#43;&#43;] 高速化について思うところ</title>
      <link>https://h-sao.com/blog/2011/01/01/think-about-sppding-up-cpp/</link>
      <pubDate>Sat, 01 Jan 2011 23:50:42 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2011/01/01/think-about-sppding-up-cpp/</guid>
      <description>明けましておめでとうございます♪
遥佐保（はるか・さお）です
2011年もどうぞ、よろしくお願いします
これは C++ Advent Calendar jp 2010 (http://atnd.org/events/10573) への26日目（補欠１号！）の参加記事です
C++の仕様やBoostについては全然詳しくないので、、すみません
C++でのゲーム作成の時期が長かったので、高速化について、思うところを記載してみます
読み物として目を通して頂ければと思います
最初に。。
ゲームは結果を出せれば何でもアリな世界で
極端な話どんなに可動性に欠けても規格に則ってなくても
良い作品が出来ればそれでヨシ！という感じなので
有識者が見たら反感を買うコードがうじゃうじゃかもしれません
例えば、オブジェクトを生成するためには new するわけですが、new は知ってのとおり、１フレーム内で大量に処理するには時間がかかり過ぎるし、タイミングによっては最悪、確保出来ない場合（※）もあります
 （※）確保出来なかった場合どうなるのか？ですが、
優先順位を決めて確保の可否を判断したりします
自分がどうしても確保されなければならないOBJの場合
他の生きているOBJで優先順位の低いやつを探して
そのOBJを殺し、自分に新たに割り当てたりします
 そうなってくると、最初に予め new しておいて、それを使いまわすということになるのですが、そしたらコンストラクタやデストラクタに依存しない作りをルールにしておく必要があります
 // もしくは、デストラクタを明示的に自力で呼ぶルール
 全然事情の知らない人が、このルールだけを見たら
「C++のデストラクタは信用できないから使わないんだってさ、ばかじゃないの！？」
と言うかもしれないけど、ゲームはメモリ確保関連は動的に見えて、ほぼ静的なので
こりゃ仕方ない
そういうのって凄まじい試行錯誤から生み出された究極のソースコードなので、許してもらいたいです
↓↓例えばこんな例
1 2 3 4 5 6 7 8 9  // 最初に確保 void *p_mem = operator new( max_size * sizeof( WORK )); WORK *box = static_cast&amp;lt;WORK*&amp;gt;( p_mem ); for( i = 0; i &amp;lt; max_size; i ++ ){ new( &amp;amp;box[i] ) WORK(); } // 自分でデストラクタ呼び  box[i].</description>
    </item>
    
    <item>
      <title>[C/C&#43;&#43;] 割り算を使わないで割り算する方法</title>
      <link>https://h-sao.com/blog/2008/07/29/how-to-divide-without-division/</link>
      <pubDate>Tue, 29 Jul 2008 01:17:00 +0900</pubDate>
      
      <guid>https://h-sao.com/blog/2008/07/29/how-to-divide-without-division/</guid>
      <description>ビット・シフトの計算の練習問題＜上級編＞です
Q. 割り算をシフトと引き算のみで表現しなさい
A. 回答
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  // x / y = ans // x: 分子 // y: 分母 // ans:答え  ans = 0; while( x &amp;gt;= y ){ dammy = y; syou = 1; while( x &amp;gt;= dammy ){ // 割られる数を超えるまで割る数をシフト  dammy = dammy &amp;lt;&amp;lt; 1; syou = syou &amp;lt;&amp;lt; 1; } dammy = dammy &amp;gt;&amp;gt; 1; // 超える手前まで戻す  syou = syou &amp;gt;&amp;gt; 1; x = x - dammy; // 筆算  ans = ans + syou; // 答え  } printf( &amp;#34;%d ・・・%d\n&amp;#34;, ans, x );    新人研修などにどうでしょう？</description>
    </item>
    
  </channel>
</rss>